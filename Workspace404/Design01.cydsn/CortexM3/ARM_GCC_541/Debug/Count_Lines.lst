ARM GAS  C:\Users\sk3220\AppData\Local\Temp\ccvoK08Q.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"Count_Lines.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.Count_Lines_Enable,"ax",%progbits
  20              		.align	2
  21              		.global	Count_Lines_Enable
  22              		.thumb
  23              		.thumb_func
  24              		.type	Count_Lines_Enable, %function
  25              	Count_Lines_Enable:
  26              	.LFB1:
  27              		.file 1 "Generated_Source\\PSoC5\\Count_Lines.c"
   1:Generated_Source\PSoC5/Count_Lines.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/Count_Lines.c **** * File Name: Count_Lines.c  
   3:Generated_Source\PSoC5/Count_Lines.c **** * Version 3.0
   4:Generated_Source\PSoC5/Count_Lines.c **** *
   5:Generated_Source\PSoC5/Count_Lines.c **** *  Description:
   6:Generated_Source\PSoC5/Count_Lines.c **** *     The Counter component consists of a 8, 16, 24 or 32-bit counter with
   7:Generated_Source\PSoC5/Count_Lines.c **** *     a selectable period between 2 and 2^Width - 1.  
   8:Generated_Source\PSoC5/Count_Lines.c **** *
   9:Generated_Source\PSoC5/Count_Lines.c **** *   Note:
  10:Generated_Source\PSoC5/Count_Lines.c **** *     None
  11:Generated_Source\PSoC5/Count_Lines.c **** *
  12:Generated_Source\PSoC5/Count_Lines.c **** ********************************************************************************
  13:Generated_Source\PSoC5/Count_Lines.c **** * Copyright 2008-2012, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC5/Count_Lines.c **** * You may use this file only in accordance with the license, terms, conditions, 
  15:Generated_Source\PSoC5/Count_Lines.c **** * disclaimers, and limitations in the end user license agreement accompanying 
  16:Generated_Source\PSoC5/Count_Lines.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC5/Count_Lines.c **** *******************************************************************************/
  18:Generated_Source\PSoC5/Count_Lines.c **** 
  19:Generated_Source\PSoC5/Count_Lines.c **** #include "Count_Lines.h"
  20:Generated_Source\PSoC5/Count_Lines.c **** 
  21:Generated_Source\PSoC5/Count_Lines.c **** uint8 Count_Lines_initVar = 0u;
  22:Generated_Source\PSoC5/Count_Lines.c **** 
  23:Generated_Source\PSoC5/Count_Lines.c **** 
  24:Generated_Source\PSoC5/Count_Lines.c **** /*******************************************************************************
  25:Generated_Source\PSoC5/Count_Lines.c **** * Function Name: Count_Lines_Init
  26:Generated_Source\PSoC5/Count_Lines.c **** ********************************************************************************
  27:Generated_Source\PSoC5/Count_Lines.c **** * Summary:
  28:Generated_Source\PSoC5/Count_Lines.c **** *     Initialize to the schematic state
  29:Generated_Source\PSoC5/Count_Lines.c **** * 
  30:Generated_Source\PSoC5/Count_Lines.c **** * Parameters:  
ARM GAS  C:\Users\sk3220\AppData\Local\Temp\ccvoK08Q.s 			page 2


  31:Generated_Source\PSoC5/Count_Lines.c **** *  void  
  32:Generated_Source\PSoC5/Count_Lines.c **** *
  33:Generated_Source\PSoC5/Count_Lines.c **** * Return: 
  34:Generated_Source\PSoC5/Count_Lines.c **** *  void
  35:Generated_Source\PSoC5/Count_Lines.c **** *
  36:Generated_Source\PSoC5/Count_Lines.c **** *******************************************************************************/
  37:Generated_Source\PSoC5/Count_Lines.c **** void Count_Lines_Init(void) 
  38:Generated_Source\PSoC5/Count_Lines.c **** {
  39:Generated_Source\PSoC5/Count_Lines.c ****         #if (!Count_Lines_UsingFixedFunction && !Count_Lines_ControlRegRemoved)
  40:Generated_Source\PSoC5/Count_Lines.c ****             uint8 ctrl;
  41:Generated_Source\PSoC5/Count_Lines.c ****         #endif /* (!Count_Lines_UsingFixedFunction && !Count_Lines_ControlRegRemoved) */
  42:Generated_Source\PSoC5/Count_Lines.c ****         
  43:Generated_Source\PSoC5/Count_Lines.c ****         #if(!Count_Lines_UsingFixedFunction) 
  44:Generated_Source\PSoC5/Count_Lines.c ****             /* Interrupt State Backup for Critical Region*/
  45:Generated_Source\PSoC5/Count_Lines.c ****             uint8 Count_Lines_interruptState;
  46:Generated_Source\PSoC5/Count_Lines.c ****         #endif /* (!Count_Lines_UsingFixedFunction) */
  47:Generated_Source\PSoC5/Count_Lines.c ****         
  48:Generated_Source\PSoC5/Count_Lines.c ****         #if (Count_Lines_UsingFixedFunction)
  49:Generated_Source\PSoC5/Count_Lines.c ****             /* Clear all bits but the enable bit (if it's already set for Timer operation */
  50:Generated_Source\PSoC5/Count_Lines.c ****             Count_Lines_CONTROL &= Count_Lines_CTRL_ENABLE;
  51:Generated_Source\PSoC5/Count_Lines.c ****             
  52:Generated_Source\PSoC5/Count_Lines.c ****             /* Clear the mode bits for continuous run mode */
  53:Generated_Source\PSoC5/Count_Lines.c ****             #if (CY_PSOC5A)
  54:Generated_Source\PSoC5/Count_Lines.c ****                 Count_Lines_CONTROL2 &= ((uint8)(~Count_Lines_CTRL_MODE_MASK));
  55:Generated_Source\PSoC5/Count_Lines.c ****             #endif /* (CY_PSOC5A) */
  56:Generated_Source\PSoC5/Count_Lines.c ****             #if (CY_PSOC3 || CY_PSOC5LP)
  57:Generated_Source\PSoC5/Count_Lines.c ****                 Count_Lines_CONTROL3 &= ((uint8)(~Count_Lines_CTRL_MODE_MASK));                
  58:Generated_Source\PSoC5/Count_Lines.c ****             #endif /* (CY_PSOC3 || CY_PSOC5LP) */
  59:Generated_Source\PSoC5/Count_Lines.c ****             /* Check if One Shot mode is enabled i.e. RunMode !=0*/
  60:Generated_Source\PSoC5/Count_Lines.c ****             #if (Count_Lines_RunModeUsed != 0x0u)
  61:Generated_Source\PSoC5/Count_Lines.c ****                 /* Set 3rd bit of Control register to enable one shot mode */
  62:Generated_Source\PSoC5/Count_Lines.c ****                 Count_Lines_CONTROL |= Count_Lines_ONESHOT;
  63:Generated_Source\PSoC5/Count_Lines.c ****             #endif /* (Count_Lines_RunModeUsed != 0x0u) */
  64:Generated_Source\PSoC5/Count_Lines.c ****             
  65:Generated_Source\PSoC5/Count_Lines.c ****             /* Set the IRQ to use the status register interrupts */
  66:Generated_Source\PSoC5/Count_Lines.c ****             Count_Lines_CONTROL2 |= Count_Lines_CTRL2_IRQ_SEL;
  67:Generated_Source\PSoC5/Count_Lines.c ****             
  68:Generated_Source\PSoC5/Count_Lines.c ****             /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
  69:Generated_Source\PSoC5/Count_Lines.c ****             Count_Lines_RT1 &= ((uint8)(~Count_Lines_RT1_MASK));
  70:Generated_Source\PSoC5/Count_Lines.c ****             Count_Lines_RT1 |= Count_Lines_SYNC;     
  71:Generated_Source\PSoC5/Count_Lines.c ****                     
  72:Generated_Source\PSoC5/Count_Lines.c ****             /*Enable DSI Sync all all inputs of the Timer*/
  73:Generated_Source\PSoC5/Count_Lines.c ****             Count_Lines_RT1 &= ((uint8)(~Count_Lines_SYNCDSI_MASK));
  74:Generated_Source\PSoC5/Count_Lines.c ****             Count_Lines_RT1 |= Count_Lines_SYNCDSI_EN;
  75:Generated_Source\PSoC5/Count_Lines.c **** 
  76:Generated_Source\PSoC5/Count_Lines.c ****         #else
  77:Generated_Source\PSoC5/Count_Lines.c ****             #if(!Count_Lines_ControlRegRemoved)
  78:Generated_Source\PSoC5/Count_Lines.c ****             /* Set the default compare mode defined in the parameter */
  79:Generated_Source\PSoC5/Count_Lines.c ****             ctrl = Count_Lines_CONTROL & ((uint8)(~Count_Lines_CTRL_CMPMODE_MASK));
  80:Generated_Source\PSoC5/Count_Lines.c ****             Count_Lines_CONTROL = ctrl | Count_Lines_DEFAULT_COMPARE_MODE;
  81:Generated_Source\PSoC5/Count_Lines.c ****             
  82:Generated_Source\PSoC5/Count_Lines.c ****             /* Set the default capture mode defined in the parameter */
  83:Generated_Source\PSoC5/Count_Lines.c ****             ctrl = Count_Lines_CONTROL & ((uint8)(~Count_Lines_CTRL_CAPMODE_MASK));
  84:Generated_Source\PSoC5/Count_Lines.c ****             
  85:Generated_Source\PSoC5/Count_Lines.c ****             #if( 0 != Count_Lines_CAPTURE_MODE_CONF)
  86:Generated_Source\PSoC5/Count_Lines.c ****                 Count_Lines_CONTROL = ctrl | Count_Lines_DEFAULT_CAPTURE_MODE;
  87:Generated_Source\PSoC5/Count_Lines.c ****             #else
ARM GAS  C:\Users\sk3220\AppData\Local\Temp\ccvoK08Q.s 			page 3


  88:Generated_Source\PSoC5/Count_Lines.c ****                 Count_Lines_CONTROL = ctrl;
  89:Generated_Source\PSoC5/Count_Lines.c ****             #endif /* 0 != Count_Lines_CAPTURE_MODE */ 
  90:Generated_Source\PSoC5/Count_Lines.c ****             
  91:Generated_Source\PSoC5/Count_Lines.c ****             #endif /* (!Count_Lines_ControlRegRemoved) */
  92:Generated_Source\PSoC5/Count_Lines.c ****         #endif /* (Count_Lines_UsingFixedFunction) */
  93:Generated_Source\PSoC5/Count_Lines.c ****         
  94:Generated_Source\PSoC5/Count_Lines.c ****         /* Clear all data in the FIFO's */
  95:Generated_Source\PSoC5/Count_Lines.c ****         #if (!Count_Lines_UsingFixedFunction)
  96:Generated_Source\PSoC5/Count_Lines.c ****             Count_Lines_ClearFIFO();
  97:Generated_Source\PSoC5/Count_Lines.c ****         #endif /* (!Count_Lines_UsingFixedFunction) */
  98:Generated_Source\PSoC5/Count_Lines.c ****         
  99:Generated_Source\PSoC5/Count_Lines.c ****         /* Set Initial values from Configuration */
 100:Generated_Source\PSoC5/Count_Lines.c ****         Count_Lines_WritePeriod(Count_Lines_INIT_PERIOD_VALUE);
 101:Generated_Source\PSoC5/Count_Lines.c ****         #if (!(Count_Lines_UsingFixedFunction && (CY_PSOC5A)))
 102:Generated_Source\PSoC5/Count_Lines.c ****             Count_Lines_WriteCounter(Count_Lines_INIT_COUNTER_VALUE);
 103:Generated_Source\PSoC5/Count_Lines.c ****         #endif /* (!(Count_Lines_UsingFixedFunction && (CY_PSOC5A))) */
 104:Generated_Source\PSoC5/Count_Lines.c ****         Count_Lines_SetInterruptMode(Count_Lines_INIT_INTERRUPTS_MASK);
 105:Generated_Source\PSoC5/Count_Lines.c ****         
 106:Generated_Source\PSoC5/Count_Lines.c ****         #if (!Count_Lines_UsingFixedFunction)
 107:Generated_Source\PSoC5/Count_Lines.c ****             /* Read the status register to clear the unwanted interrupts */
 108:Generated_Source\PSoC5/Count_Lines.c ****             (void)Count_Lines_ReadStatusRegister();
 109:Generated_Source\PSoC5/Count_Lines.c ****             /* Set the compare value (only available to non-fixed function implementation */
 110:Generated_Source\PSoC5/Count_Lines.c ****             Count_Lines_WriteCompare(Count_Lines_INIT_COMPARE_VALUE);
 111:Generated_Source\PSoC5/Count_Lines.c ****             /* Use the interrupt output of the status register for IRQ output */
 112:Generated_Source\PSoC5/Count_Lines.c ****             
 113:Generated_Source\PSoC5/Count_Lines.c ****             /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region cri
 114:Generated_Source\PSoC5/Count_Lines.c ****             /* Enter Critical Region*/
 115:Generated_Source\PSoC5/Count_Lines.c ****             Count_Lines_interruptState = CyEnterCriticalSection();
 116:Generated_Source\PSoC5/Count_Lines.c ****             
 117:Generated_Source\PSoC5/Count_Lines.c ****             Count_Lines_STATUS_AUX_CTRL |= Count_Lines_STATUS_ACTL_INT_EN_MASK;
 118:Generated_Source\PSoC5/Count_Lines.c ****             
 119:Generated_Source\PSoC5/Count_Lines.c ****             /* Exit Critical Region*/
 120:Generated_Source\PSoC5/Count_Lines.c ****             CyExitCriticalSection(Count_Lines_interruptState);
 121:Generated_Source\PSoC5/Count_Lines.c ****             
 122:Generated_Source\PSoC5/Count_Lines.c ****         #endif /* (!Count_Lines_UsingFixedFunction) */
 123:Generated_Source\PSoC5/Count_Lines.c **** }
 124:Generated_Source\PSoC5/Count_Lines.c **** 
 125:Generated_Source\PSoC5/Count_Lines.c **** 
 126:Generated_Source\PSoC5/Count_Lines.c **** /*******************************************************************************
 127:Generated_Source\PSoC5/Count_Lines.c **** * Function Name: Count_Lines_Enable
 128:Generated_Source\PSoC5/Count_Lines.c **** ********************************************************************************
 129:Generated_Source\PSoC5/Count_Lines.c **** * Summary:
 130:Generated_Source\PSoC5/Count_Lines.c **** *     Enable the Counter
 131:Generated_Source\PSoC5/Count_Lines.c **** * 
 132:Generated_Source\PSoC5/Count_Lines.c **** * Parameters:  
 133:Generated_Source\PSoC5/Count_Lines.c **** *  void  
 134:Generated_Source\PSoC5/Count_Lines.c **** *
 135:Generated_Source\PSoC5/Count_Lines.c **** * Return: 
 136:Generated_Source\PSoC5/Count_Lines.c **** *  void
 137:Generated_Source\PSoC5/Count_Lines.c **** *
 138:Generated_Source\PSoC5/Count_Lines.c **** * Side Effects: 
 139:Generated_Source\PSoC5/Count_Lines.c **** *   If the Enable mode is set to Hardware only then this function has no effect 
 140:Generated_Source\PSoC5/Count_Lines.c **** *   on the operation of the counter.
 141:Generated_Source\PSoC5/Count_Lines.c **** *
 142:Generated_Source\PSoC5/Count_Lines.c **** *******************************************************************************/
 143:Generated_Source\PSoC5/Count_Lines.c **** void Count_Lines_Enable(void) 
 144:Generated_Source\PSoC5/Count_Lines.c **** {
ARM GAS  C:\Users\sk3220\AppData\Local\Temp\ccvoK08Q.s 			page 4


  28              		.loc 1 144 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 145:Generated_Source\PSoC5/Count_Lines.c ****     /* Globally Enable the Fixed Function Block chosen */
 146:Generated_Source\PSoC5/Count_Lines.c ****     #if (Count_Lines_UsingFixedFunction)
 147:Generated_Source\PSoC5/Count_Lines.c ****         Count_Lines_GLOBAL_ENABLE |= Count_Lines_BLOCK_EN_MASK;
 148:Generated_Source\PSoC5/Count_Lines.c ****         Count_Lines_GLOBAL_STBY_ENABLE |= Count_Lines_BLOCK_STBY_EN_MASK;
 149:Generated_Source\PSoC5/Count_Lines.c ****     #endif /* (Count_Lines_UsingFixedFunction) */  
 150:Generated_Source\PSoC5/Count_Lines.c ****         
 151:Generated_Source\PSoC5/Count_Lines.c ****     /* Enable the counter from the control register  */
 152:Generated_Source\PSoC5/Count_Lines.c ****     /* If Fixed Function then make sure Mode is set correctly */
 153:Generated_Source\PSoC5/Count_Lines.c ****     /* else make sure reset is clear */
 154:Generated_Source\PSoC5/Count_Lines.c ****     #if(!Count_Lines_ControlRegRemoved || Count_Lines_UsingFixedFunction)
 155:Generated_Source\PSoC5/Count_Lines.c ****         Count_Lines_CONTROL |= Count_Lines_CTRL_ENABLE;                
  33              		.loc 1 155 0
  34 0000 024A     		ldr	r2, .L2
  35 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  36 0004 43F08003 		orr	r3, r3, #128
  37 0008 1370     		strb	r3, [r2]
  38 000a 7047     		bx	lr
  39              	.L3:
  40              		.align	2
  41              	.L2:
  42 000c 7B640040 		.word	1073767547
  43              		.cfi_endproc
  44              	.LFE1:
  45              		.size	Count_Lines_Enable, .-Count_Lines_Enable
  46              		.section	.text.Count_Lines_Stop,"ax",%progbits
  47              		.align	2
  48              		.global	Count_Lines_Stop
  49              		.thumb
  50              		.thumb_func
  51              		.type	Count_Lines_Stop, %function
  52              	Count_Lines_Stop:
  53              	.LFB3:
 156:Generated_Source\PSoC5/Count_Lines.c ****     #endif /* (!Count_Lines_ControlRegRemoved || Count_Lines_UsingFixedFunction) */
 157:Generated_Source\PSoC5/Count_Lines.c ****     
 158:Generated_Source\PSoC5/Count_Lines.c **** }
 159:Generated_Source\PSoC5/Count_Lines.c **** 
 160:Generated_Source\PSoC5/Count_Lines.c **** 
 161:Generated_Source\PSoC5/Count_Lines.c **** /*******************************************************************************
 162:Generated_Source\PSoC5/Count_Lines.c **** * Function Name: Count_Lines_Start
 163:Generated_Source\PSoC5/Count_Lines.c **** ********************************************************************************
 164:Generated_Source\PSoC5/Count_Lines.c **** * Summary:
 165:Generated_Source\PSoC5/Count_Lines.c **** *  Enables the counter for operation 
 166:Generated_Source\PSoC5/Count_Lines.c **** *
 167:Generated_Source\PSoC5/Count_Lines.c **** * Parameters:  
 168:Generated_Source\PSoC5/Count_Lines.c **** *  void  
 169:Generated_Source\PSoC5/Count_Lines.c **** *
 170:Generated_Source\PSoC5/Count_Lines.c **** * Return: 
 171:Generated_Source\PSoC5/Count_Lines.c **** *  void
 172:Generated_Source\PSoC5/Count_Lines.c **** *
 173:Generated_Source\PSoC5/Count_Lines.c **** * Global variables:
 174:Generated_Source\PSoC5/Count_Lines.c **** *  Count_Lines_initVar: Is modified when this function is called for the  
 175:Generated_Source\PSoC5/Count_Lines.c **** *   first time. Is used to ensure that initialization happens only once.
ARM GAS  C:\Users\sk3220\AppData\Local\Temp\ccvoK08Q.s 			page 5


 176:Generated_Source\PSoC5/Count_Lines.c **** *
 177:Generated_Source\PSoC5/Count_Lines.c **** *******************************************************************************/
 178:Generated_Source\PSoC5/Count_Lines.c **** void Count_Lines_Start(void) 
 179:Generated_Source\PSoC5/Count_Lines.c **** {
 180:Generated_Source\PSoC5/Count_Lines.c ****     if(Count_Lines_initVar == 0u)
 181:Generated_Source\PSoC5/Count_Lines.c ****     {
 182:Generated_Source\PSoC5/Count_Lines.c ****         Count_Lines_Init();
 183:Generated_Source\PSoC5/Count_Lines.c ****         
 184:Generated_Source\PSoC5/Count_Lines.c ****         Count_Lines_initVar = 1u; /* Clear this bit for Initialization */        
 185:Generated_Source\PSoC5/Count_Lines.c ****     }
 186:Generated_Source\PSoC5/Count_Lines.c ****     
 187:Generated_Source\PSoC5/Count_Lines.c ****     /* Enable the Counter */
 188:Generated_Source\PSoC5/Count_Lines.c ****     Count_Lines_Enable();        
 189:Generated_Source\PSoC5/Count_Lines.c **** }
 190:Generated_Source\PSoC5/Count_Lines.c **** 
 191:Generated_Source\PSoC5/Count_Lines.c **** 
 192:Generated_Source\PSoC5/Count_Lines.c **** /*******************************************************************************
 193:Generated_Source\PSoC5/Count_Lines.c **** * Function Name: Count_Lines_Stop
 194:Generated_Source\PSoC5/Count_Lines.c **** ********************************************************************************
 195:Generated_Source\PSoC5/Count_Lines.c **** * Summary:
 196:Generated_Source\PSoC5/Count_Lines.c **** * Halts the counter, but does not change any modes or disable interrupts.
 197:Generated_Source\PSoC5/Count_Lines.c **** *
 198:Generated_Source\PSoC5/Count_Lines.c **** * Parameters:  
 199:Generated_Source\PSoC5/Count_Lines.c **** *  void  
 200:Generated_Source\PSoC5/Count_Lines.c **** *
 201:Generated_Source\PSoC5/Count_Lines.c **** * Return: 
 202:Generated_Source\PSoC5/Count_Lines.c **** *  void
 203:Generated_Source\PSoC5/Count_Lines.c **** *
 204:Generated_Source\PSoC5/Count_Lines.c **** * Side Effects: If the Enable mode is set to Hardware only then this function
 205:Generated_Source\PSoC5/Count_Lines.c **** *               has no effect on the operation of the counter.
 206:Generated_Source\PSoC5/Count_Lines.c **** *
 207:Generated_Source\PSoC5/Count_Lines.c **** *******************************************************************************/
 208:Generated_Source\PSoC5/Count_Lines.c **** void Count_Lines_Stop(void) 
 209:Generated_Source\PSoC5/Count_Lines.c **** {
  54              		.loc 1 209 0
  55              		.cfi_startproc
  56              		@ args = 0, pretend = 0, frame = 0
  57              		@ frame_needed = 0, uses_anonymous_args = 0
  58              		@ link register save eliminated.
 210:Generated_Source\PSoC5/Count_Lines.c ****     /* Disable Counter */
 211:Generated_Source\PSoC5/Count_Lines.c ****     #if(!Count_Lines_ControlRegRemoved || Count_Lines_UsingFixedFunction)
 212:Generated_Source\PSoC5/Count_Lines.c ****         Count_Lines_CONTROL &= ((uint8)(~Count_Lines_CTRL_ENABLE));        
  59              		.loc 1 212 0
  60 0000 024A     		ldr	r2, .L5
  61 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  62 0004 03F07F03 		and	r3, r3, #127
  63 0008 1370     		strb	r3, [r2]
  64 000a 7047     		bx	lr
  65              	.L6:
  66              		.align	2
  67              	.L5:
  68 000c 7B640040 		.word	1073767547
  69              		.cfi_endproc
  70              	.LFE3:
  71              		.size	Count_Lines_Stop, .-Count_Lines_Stop
  72              		.section	.text.Count_Lines_SetInterruptMode,"ax",%progbits
  73              		.align	2
ARM GAS  C:\Users\sk3220\AppData\Local\Temp\ccvoK08Q.s 			page 6


  74              		.global	Count_Lines_SetInterruptMode
  75              		.thumb
  76              		.thumb_func
  77              		.type	Count_Lines_SetInterruptMode, %function
  78              	Count_Lines_SetInterruptMode:
  79              	.LFB4:
 213:Generated_Source\PSoC5/Count_Lines.c ****     #endif /* (!Count_Lines_ControlRegRemoved || Count_Lines_UsingFixedFunction) */
 214:Generated_Source\PSoC5/Count_Lines.c ****     
 215:Generated_Source\PSoC5/Count_Lines.c ****     /* Globally disable the Fixed Function Block chosen */
 216:Generated_Source\PSoC5/Count_Lines.c ****     #if (Count_Lines_UsingFixedFunction)
 217:Generated_Source\PSoC5/Count_Lines.c ****         Count_Lines_GLOBAL_ENABLE &= ((uint8)(~Count_Lines_BLOCK_EN_MASK));
 218:Generated_Source\PSoC5/Count_Lines.c ****         Count_Lines_GLOBAL_STBY_ENABLE &= ((uint8)(~Count_Lines_BLOCK_STBY_EN_MASK));
 219:Generated_Source\PSoC5/Count_Lines.c ****     #endif /* (Count_Lines_UsingFixedFunction) */
 220:Generated_Source\PSoC5/Count_Lines.c **** }
 221:Generated_Source\PSoC5/Count_Lines.c **** 
 222:Generated_Source\PSoC5/Count_Lines.c **** 
 223:Generated_Source\PSoC5/Count_Lines.c **** /*******************************************************************************
 224:Generated_Source\PSoC5/Count_Lines.c **** * Function Name: Count_Lines_SetInterruptMode
 225:Generated_Source\PSoC5/Count_Lines.c **** ********************************************************************************
 226:Generated_Source\PSoC5/Count_Lines.c **** * Summary:
 227:Generated_Source\PSoC5/Count_Lines.c **** * Configures which interrupt sources are enabled to generate the final interrupt
 228:Generated_Source\PSoC5/Count_Lines.c **** *
 229:Generated_Source\PSoC5/Count_Lines.c **** * Parameters:  
 230:Generated_Source\PSoC5/Count_Lines.c **** *  InterruptsMask: This parameter is an or'd collection of the status bits
 231:Generated_Source\PSoC5/Count_Lines.c **** *                   which will be allowed to generate the counters interrupt.   
 232:Generated_Source\PSoC5/Count_Lines.c **** *
 233:Generated_Source\PSoC5/Count_Lines.c **** * Return: 
 234:Generated_Source\PSoC5/Count_Lines.c **** *  void
 235:Generated_Source\PSoC5/Count_Lines.c **** *
 236:Generated_Source\PSoC5/Count_Lines.c **** *******************************************************************************/
 237:Generated_Source\PSoC5/Count_Lines.c **** void Count_Lines_SetInterruptMode(uint8 interruptsMask) 
 238:Generated_Source\PSoC5/Count_Lines.c **** {
  80              		.loc 1 238 0
  81              		.cfi_startproc
  82              		@ args = 0, pretend = 0, frame = 0
  83              		@ frame_needed = 0, uses_anonymous_args = 0
  84              		@ link register save eliminated.
  85              	.LVL0:
 239:Generated_Source\PSoC5/Count_Lines.c ****     Count_Lines_STATUS_MASK = interruptsMask;
  86              		.loc 1 239 0
  87 0000 014B     		ldr	r3, .L8
  88 0002 1870     		strb	r0, [r3]
  89 0004 7047     		bx	lr
  90              	.L9:
  91 0006 00BF     		.align	2
  92              	.L8:
  93 0008 8A650040 		.word	1073767818
  94              		.cfi_endproc
  95              	.LFE4:
  96              		.size	Count_Lines_SetInterruptMode, .-Count_Lines_SetInterruptMode
  97              		.section	.text.Count_Lines_ReadStatusRegister,"ax",%progbits
  98              		.align	2
  99              		.global	Count_Lines_ReadStatusRegister
 100              		.thumb
 101              		.thumb_func
 102              		.type	Count_Lines_ReadStatusRegister, %function
 103              	Count_Lines_ReadStatusRegister:
ARM GAS  C:\Users\sk3220\AppData\Local\Temp\ccvoK08Q.s 			page 7


 104              	.LFB5:
 240:Generated_Source\PSoC5/Count_Lines.c **** }
 241:Generated_Source\PSoC5/Count_Lines.c **** 
 242:Generated_Source\PSoC5/Count_Lines.c **** 
 243:Generated_Source\PSoC5/Count_Lines.c **** /*******************************************************************************
 244:Generated_Source\PSoC5/Count_Lines.c **** * Function Name: Count_Lines_ReadStatusRegister
 245:Generated_Source\PSoC5/Count_Lines.c **** ********************************************************************************
 246:Generated_Source\PSoC5/Count_Lines.c **** * Summary:
 247:Generated_Source\PSoC5/Count_Lines.c **** *   Reads the status register and returns it's state. This function should use
 248:Generated_Source\PSoC5/Count_Lines.c **** *       defined types for the bit-field information as the bits in this
 249:Generated_Source\PSoC5/Count_Lines.c **** *       register may be permuteable.
 250:Generated_Source\PSoC5/Count_Lines.c **** *
 251:Generated_Source\PSoC5/Count_Lines.c **** * Parameters:  
 252:Generated_Source\PSoC5/Count_Lines.c **** *  void
 253:Generated_Source\PSoC5/Count_Lines.c **** *
 254:Generated_Source\PSoC5/Count_Lines.c **** * Return: 
 255:Generated_Source\PSoC5/Count_Lines.c **** *  (uint8) The contents of the status register
 256:Generated_Source\PSoC5/Count_Lines.c **** *
 257:Generated_Source\PSoC5/Count_Lines.c **** * Side Effects:
 258:Generated_Source\PSoC5/Count_Lines.c **** *   Status register bits may be clear on read. 
 259:Generated_Source\PSoC5/Count_Lines.c **** *
 260:Generated_Source\PSoC5/Count_Lines.c **** *******************************************************************************/
 261:Generated_Source\PSoC5/Count_Lines.c **** uint8   Count_Lines_ReadStatusRegister(void) 
 262:Generated_Source\PSoC5/Count_Lines.c **** {
 105              		.loc 1 262 0
 106              		.cfi_startproc
 107              		@ args = 0, pretend = 0, frame = 0
 108              		@ frame_needed = 0, uses_anonymous_args = 0
 109              		@ link register save eliminated.
 263:Generated_Source\PSoC5/Count_Lines.c ****     return Count_Lines_STATUS;
 110              		.loc 1 263 0
 111 0000 014B     		ldr	r3, .L11
 112 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 264:Generated_Source\PSoC5/Count_Lines.c **** }
 113              		.loc 1 264 0
 114 0004 7047     		bx	lr
 115              	.L12:
 116 0006 00BF     		.align	2
 117              	.L11:
 118 0008 6A650040 		.word	1073767786
 119              		.cfi_endproc
 120              	.LFE5:
 121              		.size	Count_Lines_ReadStatusRegister, .-Count_Lines_ReadStatusRegister
 122              		.section	.text.Count_Lines_ReadControlRegister,"ax",%progbits
 123              		.align	2
 124              		.global	Count_Lines_ReadControlRegister
 125              		.thumb
 126              		.thumb_func
 127              		.type	Count_Lines_ReadControlRegister, %function
 128              	Count_Lines_ReadControlRegister:
 129              	.LFB6:
 265:Generated_Source\PSoC5/Count_Lines.c **** 
 266:Generated_Source\PSoC5/Count_Lines.c **** 
 267:Generated_Source\PSoC5/Count_Lines.c **** #if(!Count_Lines_ControlRegRemoved)
 268:Generated_Source\PSoC5/Count_Lines.c **** /*******************************************************************************
 269:Generated_Source\PSoC5/Count_Lines.c **** * Function Name: Count_Lines_ReadControlRegister
 270:Generated_Source\PSoC5/Count_Lines.c **** ********************************************************************************
ARM GAS  C:\Users\sk3220\AppData\Local\Temp\ccvoK08Q.s 			page 8


 271:Generated_Source\PSoC5/Count_Lines.c **** * Summary:
 272:Generated_Source\PSoC5/Count_Lines.c **** *   Reads the control register and returns it's state. This function should use
 273:Generated_Source\PSoC5/Count_Lines.c **** *       defined types for the bit-field information as the bits in this
 274:Generated_Source\PSoC5/Count_Lines.c **** *       register may be permuteable.
 275:Generated_Source\PSoC5/Count_Lines.c **** *
 276:Generated_Source\PSoC5/Count_Lines.c **** * Parameters:  
 277:Generated_Source\PSoC5/Count_Lines.c **** *  void
 278:Generated_Source\PSoC5/Count_Lines.c **** *
 279:Generated_Source\PSoC5/Count_Lines.c **** * Return: 
 280:Generated_Source\PSoC5/Count_Lines.c **** *  (uint8) The contents of the control register
 281:Generated_Source\PSoC5/Count_Lines.c **** *
 282:Generated_Source\PSoC5/Count_Lines.c **** *******************************************************************************/
 283:Generated_Source\PSoC5/Count_Lines.c **** uint8   Count_Lines_ReadControlRegister(void) 
 284:Generated_Source\PSoC5/Count_Lines.c **** {
 130              		.loc 1 284 0
 131              		.cfi_startproc
 132              		@ args = 0, pretend = 0, frame = 0
 133              		@ frame_needed = 0, uses_anonymous_args = 0
 134              		@ link register save eliminated.
 285:Generated_Source\PSoC5/Count_Lines.c ****     return Count_Lines_CONTROL;
 135              		.loc 1 285 0
 136 0000 014B     		ldr	r3, .L14
 137 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 286:Generated_Source\PSoC5/Count_Lines.c **** }
 138              		.loc 1 286 0
 139 0004 7047     		bx	lr
 140              	.L15:
 141 0006 00BF     		.align	2
 142              	.L14:
 143 0008 7B640040 		.word	1073767547
 144              		.cfi_endproc
 145              	.LFE6:
 146              		.size	Count_Lines_ReadControlRegister, .-Count_Lines_ReadControlRegister
 147              		.section	.text.Count_Lines_WriteControlRegister,"ax",%progbits
 148              		.align	2
 149              		.global	Count_Lines_WriteControlRegister
 150              		.thumb
 151              		.thumb_func
 152              		.type	Count_Lines_WriteControlRegister, %function
 153              	Count_Lines_WriteControlRegister:
 154              	.LFB7:
 287:Generated_Source\PSoC5/Count_Lines.c **** 
 288:Generated_Source\PSoC5/Count_Lines.c **** 
 289:Generated_Source\PSoC5/Count_Lines.c **** /*******************************************************************************
 290:Generated_Source\PSoC5/Count_Lines.c **** * Function Name: Count_Lines_WriteControlRegister
 291:Generated_Source\PSoC5/Count_Lines.c **** ********************************************************************************
 292:Generated_Source\PSoC5/Count_Lines.c **** * Summary:
 293:Generated_Source\PSoC5/Count_Lines.c **** *   Sets the bit-field of the control register.  This function should use
 294:Generated_Source\PSoC5/Count_Lines.c **** *       defined types for the bit-field information as the bits in this
 295:Generated_Source\PSoC5/Count_Lines.c **** *       register may be permuteable.
 296:Generated_Source\PSoC5/Count_Lines.c **** *
 297:Generated_Source\PSoC5/Count_Lines.c **** * Parameters:  
 298:Generated_Source\PSoC5/Count_Lines.c **** *  void
 299:Generated_Source\PSoC5/Count_Lines.c **** *
 300:Generated_Source\PSoC5/Count_Lines.c **** * Return: 
 301:Generated_Source\PSoC5/Count_Lines.c **** *  (uint8) The contents of the control register
 302:Generated_Source\PSoC5/Count_Lines.c **** *
ARM GAS  C:\Users\sk3220\AppData\Local\Temp\ccvoK08Q.s 			page 9


 303:Generated_Source\PSoC5/Count_Lines.c **** *******************************************************************************/
 304:Generated_Source\PSoC5/Count_Lines.c **** void    Count_Lines_WriteControlRegister(uint8 control) 
 305:Generated_Source\PSoC5/Count_Lines.c **** {
 155              		.loc 1 305 0
 156              		.cfi_startproc
 157              		@ args = 0, pretend = 0, frame = 0
 158              		@ frame_needed = 0, uses_anonymous_args = 0
 159              		@ link register save eliminated.
 160              	.LVL1:
 306:Generated_Source\PSoC5/Count_Lines.c ****     Count_Lines_CONTROL = control;
 161              		.loc 1 306 0
 162 0000 014B     		ldr	r3, .L17
 163 0002 1870     		strb	r0, [r3]
 164 0004 7047     		bx	lr
 165              	.L18:
 166 0006 00BF     		.align	2
 167              	.L17:
 168 0008 7B640040 		.word	1073767547
 169              		.cfi_endproc
 170              	.LFE7:
 171              		.size	Count_Lines_WriteControlRegister, .-Count_Lines_WriteControlRegister
 172              		.section	.text.Count_Lines_WriteCounter,"ax",%progbits
 173              		.align	2
 174              		.global	Count_Lines_WriteCounter
 175              		.thumb
 176              		.thumb_func
 177              		.type	Count_Lines_WriteCounter, %function
 178              	Count_Lines_WriteCounter:
 179              	.LFB8:
 307:Generated_Source\PSoC5/Count_Lines.c **** }
 308:Generated_Source\PSoC5/Count_Lines.c **** 
 309:Generated_Source\PSoC5/Count_Lines.c **** #endif  /* (!Count_Lines_ControlRegRemoved) */
 310:Generated_Source\PSoC5/Count_Lines.c **** 
 311:Generated_Source\PSoC5/Count_Lines.c **** 
 312:Generated_Source\PSoC5/Count_Lines.c **** #if (!(Count_Lines_UsingFixedFunction && (CY_PSOC5A)))
 313:Generated_Source\PSoC5/Count_Lines.c **** /*******************************************************************************
 314:Generated_Source\PSoC5/Count_Lines.c **** * Function Name: Count_Lines_WriteCounter
 315:Generated_Source\PSoC5/Count_Lines.c **** ********************************************************************************
 316:Generated_Source\PSoC5/Count_Lines.c **** * Summary:
 317:Generated_Source\PSoC5/Count_Lines.c **** *   This funtion is used to set the counter to a specific value
 318:Generated_Source\PSoC5/Count_Lines.c **** *
 319:Generated_Source\PSoC5/Count_Lines.c **** * Parameters:  
 320:Generated_Source\PSoC5/Count_Lines.c **** *  counter:  New counter value. 
 321:Generated_Source\PSoC5/Count_Lines.c **** *
 322:Generated_Source\PSoC5/Count_Lines.c **** * Return: 
 323:Generated_Source\PSoC5/Count_Lines.c **** *  void 
 324:Generated_Source\PSoC5/Count_Lines.c **** *
 325:Generated_Source\PSoC5/Count_Lines.c **** *******************************************************************************/
 326:Generated_Source\PSoC5/Count_Lines.c **** void Count_Lines_WriteCounter(uint16 counter) \
 327:Generated_Source\PSoC5/Count_Lines.c ****                                    
 328:Generated_Source\PSoC5/Count_Lines.c **** {
 180              		.loc 1 328 0
 181              		.cfi_startproc
 182              		@ args = 0, pretend = 0, frame = 0
 183              		@ frame_needed = 0, uses_anonymous_args = 0
 184              		@ link register save eliminated.
 185              	.LVL2:
ARM GAS  C:\Users\sk3220\AppData\Local\Temp\ccvoK08Q.s 			page 10


 329:Generated_Source\PSoC5/Count_Lines.c ****     #if(Count_Lines_UsingFixedFunction)
 330:Generated_Source\PSoC5/Count_Lines.c ****         /* assert if block is already enabled */
 331:Generated_Source\PSoC5/Count_Lines.c ****         CYASSERT (0u == (Count_Lines_GLOBAL_ENABLE & Count_Lines_BLOCK_EN_MASK));
 332:Generated_Source\PSoC5/Count_Lines.c ****         /* If block is disabled, enable it and then write the counter */
 333:Generated_Source\PSoC5/Count_Lines.c ****         Count_Lines_GLOBAL_ENABLE |= Count_Lines_BLOCK_EN_MASK;
 334:Generated_Source\PSoC5/Count_Lines.c ****         CY_SET_REG16(Count_Lines_COUNTER_LSB_PTR, (uint16)counter);
 335:Generated_Source\PSoC5/Count_Lines.c ****         Count_Lines_GLOBAL_ENABLE &= ((uint8)(~Count_Lines_BLOCK_EN_MASK));
 336:Generated_Source\PSoC5/Count_Lines.c ****     #else
 337:Generated_Source\PSoC5/Count_Lines.c ****         CY_SET_REG16(Count_Lines_COUNTER_LSB_PTR, counter);
 186              		.loc 1 337 0
 187 0000 014B     		ldr	r3, .L20
 188 0002 1880     		strh	r0, [r3]	@ movhi
 189 0004 7047     		bx	lr
 190              	.L21:
 191 0006 00BF     		.align	2
 192              	.L20:
 193 0008 106A0040 		.word	1073768976
 194              		.cfi_endproc
 195              	.LFE8:
 196              		.size	Count_Lines_WriteCounter, .-Count_Lines_WriteCounter
 197              		.section	.text.Count_Lines_ReadCounter,"ax",%progbits
 198              		.align	2
 199              		.global	Count_Lines_ReadCounter
 200              		.thumb
 201              		.thumb_func
 202              		.type	Count_Lines_ReadCounter, %function
 203              	Count_Lines_ReadCounter:
 204              	.LFB9:
 338:Generated_Source\PSoC5/Count_Lines.c ****     #endif /* (Count_Lines_UsingFixedFunction) */
 339:Generated_Source\PSoC5/Count_Lines.c **** }
 340:Generated_Source\PSoC5/Count_Lines.c **** #endif /* (!(Count_Lines_UsingFixedFunction && (CY_PSOC5A))) */
 341:Generated_Source\PSoC5/Count_Lines.c **** 
 342:Generated_Source\PSoC5/Count_Lines.c **** 
 343:Generated_Source\PSoC5/Count_Lines.c **** /*******************************************************************************
 344:Generated_Source\PSoC5/Count_Lines.c **** * Function Name: Count_Lines_ReadCounter
 345:Generated_Source\PSoC5/Count_Lines.c **** ********************************************************************************
 346:Generated_Source\PSoC5/Count_Lines.c **** * Summary:
 347:Generated_Source\PSoC5/Count_Lines.c **** * Returns the current value of the counter.  It doesn't matter
 348:Generated_Source\PSoC5/Count_Lines.c **** * if the counter is enabled or running.
 349:Generated_Source\PSoC5/Count_Lines.c **** *
 350:Generated_Source\PSoC5/Count_Lines.c **** * Parameters:  
 351:Generated_Source\PSoC5/Count_Lines.c **** *  void:  
 352:Generated_Source\PSoC5/Count_Lines.c **** *
 353:Generated_Source\PSoC5/Count_Lines.c **** * Return: 
 354:Generated_Source\PSoC5/Count_Lines.c **** *  (uint16) The present value of the counter.
 355:Generated_Source\PSoC5/Count_Lines.c **** *
 356:Generated_Source\PSoC5/Count_Lines.c **** *******************************************************************************/
 357:Generated_Source\PSoC5/Count_Lines.c **** uint16 Count_Lines_ReadCounter(void) 
 358:Generated_Source\PSoC5/Count_Lines.c **** {
 205              		.loc 1 358 0
 206              		.cfi_startproc
 207              		@ args = 0, pretend = 0, frame = 0
 208              		@ frame_needed = 0, uses_anonymous_args = 0
 209              		@ link register save eliminated.
 359:Generated_Source\PSoC5/Count_Lines.c ****     /* Force capture by reading Accumulator */
 360:Generated_Source\PSoC5/Count_Lines.c ****     /* Must first do a software capture to be able to read the counter */
 361:Generated_Source\PSoC5/Count_Lines.c ****     /* It is up to the user code to make sure there isn't already captured data in the FIFO */
ARM GAS  C:\Users\sk3220\AppData\Local\Temp\ccvoK08Q.s 			page 11


 362:Generated_Source\PSoC5/Count_Lines.c ****     #if(Count_Lines_UsingFixedFunction)
 363:Generated_Source\PSoC5/Count_Lines.c **** 		(void)CY_GET_REG16(Count_Lines_COUNTER_LSB_PTR);
 364:Generated_Source\PSoC5/Count_Lines.c **** 	#else
 365:Generated_Source\PSoC5/Count_Lines.c **** 		(void)CY_GET_REG8(Count_Lines_COUNTER_LSB_PTR_8BIT);
 210              		.loc 1 365 0
 211 0000 024B     		ldr	r3, .L23
 212 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 366:Generated_Source\PSoC5/Count_Lines.c **** 	#endif/* (Count_Lines_UsingFixedFunction) */
 367:Generated_Source\PSoC5/Count_Lines.c ****     
 368:Generated_Source\PSoC5/Count_Lines.c ****     /* Read the data from the FIFO (or capture register for Fixed Function)*/
 369:Generated_Source\PSoC5/Count_Lines.c ****     #if(Count_Lines_UsingFixedFunction)
 370:Generated_Source\PSoC5/Count_Lines.c ****         return ((uint16)CY_GET_REG16(Count_Lines_STATICCOUNT_LSB_PTR));
 371:Generated_Source\PSoC5/Count_Lines.c ****     #else
 372:Generated_Source\PSoC5/Count_Lines.c ****         return (CY_GET_REG16(Count_Lines_STATICCOUNT_LSB_PTR));
 213              		.loc 1 372 0
 214 0004 024B     		ldr	r3, .L23+4
 215 0006 1888     		ldrh	r0, [r3]
 373:Generated_Source\PSoC5/Count_Lines.c ****     #endif /* (Count_Lines_UsingFixedFunction) */
 374:Generated_Source\PSoC5/Count_Lines.c **** }
 216              		.loc 1 374 0
 217 0008 80B2     		uxth	r0, r0
 218 000a 7047     		bx	lr
 219              	.L24:
 220              		.align	2
 221              	.L23:
 222 000c 08650040 		.word	1073767688
 223 0010 906A0040 		.word	1073769104
 224              		.cfi_endproc
 225              	.LFE9:
 226              		.size	Count_Lines_ReadCounter, .-Count_Lines_ReadCounter
 227              		.section	.text.Count_Lines_ReadCapture,"ax",%progbits
 228              		.align	2
 229              		.global	Count_Lines_ReadCapture
 230              		.thumb
 231              		.thumb_func
 232              		.type	Count_Lines_ReadCapture, %function
 233              	Count_Lines_ReadCapture:
 234              	.LFB10:
 375:Generated_Source\PSoC5/Count_Lines.c **** 
 376:Generated_Source\PSoC5/Count_Lines.c **** 
 377:Generated_Source\PSoC5/Count_Lines.c **** /*******************************************************************************
 378:Generated_Source\PSoC5/Count_Lines.c **** * Function Name: Count_Lines_ReadCapture
 379:Generated_Source\PSoC5/Count_Lines.c **** ********************************************************************************
 380:Generated_Source\PSoC5/Count_Lines.c **** * Summary:
 381:Generated_Source\PSoC5/Count_Lines.c **** *   This function returns the last value captured.
 382:Generated_Source\PSoC5/Count_Lines.c **** *
 383:Generated_Source\PSoC5/Count_Lines.c **** * Parameters:  
 384:Generated_Source\PSoC5/Count_Lines.c **** *  void
 385:Generated_Source\PSoC5/Count_Lines.c **** *
 386:Generated_Source\PSoC5/Count_Lines.c **** * Return: 
 387:Generated_Source\PSoC5/Count_Lines.c **** *  (uint16) Present Capture value.
 388:Generated_Source\PSoC5/Count_Lines.c **** *
 389:Generated_Source\PSoC5/Count_Lines.c **** *******************************************************************************/
 390:Generated_Source\PSoC5/Count_Lines.c **** uint16 Count_Lines_ReadCapture(void) 
 391:Generated_Source\PSoC5/Count_Lines.c **** {
 235              		.loc 1 391 0
 236              		.cfi_startproc
ARM GAS  C:\Users\sk3220\AppData\Local\Temp\ccvoK08Q.s 			page 12


 237              		@ args = 0, pretend = 0, frame = 0
 238              		@ frame_needed = 0, uses_anonymous_args = 0
 239              		@ link register save eliminated.
 392:Generated_Source\PSoC5/Count_Lines.c ****     #if(Count_Lines_UsingFixedFunction)
 393:Generated_Source\PSoC5/Count_Lines.c ****         return ((uint16)CY_GET_REG16(Count_Lines_STATICCOUNT_LSB_PTR));
 394:Generated_Source\PSoC5/Count_Lines.c ****     #else
 395:Generated_Source\PSoC5/Count_Lines.c ****         return (CY_GET_REG16(Count_Lines_STATICCOUNT_LSB_PTR));
 240              		.loc 1 395 0
 241 0000 014B     		ldr	r3, .L26
 242 0002 1888     		ldrh	r0, [r3]
 396:Generated_Source\PSoC5/Count_Lines.c ****     #endif /* (Count_Lines_UsingFixedFunction) */
 397:Generated_Source\PSoC5/Count_Lines.c **** }
 243              		.loc 1 397 0
 244 0004 80B2     		uxth	r0, r0
 245 0006 7047     		bx	lr
 246              	.L27:
 247              		.align	2
 248              	.L26:
 249 0008 906A0040 		.word	1073769104
 250              		.cfi_endproc
 251              	.LFE10:
 252              		.size	Count_Lines_ReadCapture, .-Count_Lines_ReadCapture
 253              		.section	.text.Count_Lines_WritePeriod,"ax",%progbits
 254              		.align	2
 255              		.global	Count_Lines_WritePeriod
 256              		.thumb
 257              		.thumb_func
 258              		.type	Count_Lines_WritePeriod, %function
 259              	Count_Lines_WritePeriod:
 260              	.LFB11:
 398:Generated_Source\PSoC5/Count_Lines.c **** 
 399:Generated_Source\PSoC5/Count_Lines.c **** 
 400:Generated_Source\PSoC5/Count_Lines.c **** /*******************************************************************************
 401:Generated_Source\PSoC5/Count_Lines.c **** * Function Name: Count_Lines_WritePeriod
 402:Generated_Source\PSoC5/Count_Lines.c **** ********************************************************************************
 403:Generated_Source\PSoC5/Count_Lines.c **** * Summary:
 404:Generated_Source\PSoC5/Count_Lines.c **** * Changes the period of the counter.  The new period 
 405:Generated_Source\PSoC5/Count_Lines.c **** * will be loaded the next time terminal count is detected.
 406:Generated_Source\PSoC5/Count_Lines.c **** *
 407:Generated_Source\PSoC5/Count_Lines.c **** * Parameters:  
 408:Generated_Source\PSoC5/Count_Lines.c **** *  period: (uint16) A value of 0 will result in
 409:Generated_Source\PSoC5/Count_Lines.c **** *         the counter remaining at zero.  
 410:Generated_Source\PSoC5/Count_Lines.c **** *
 411:Generated_Source\PSoC5/Count_Lines.c **** * Return: 
 412:Generated_Source\PSoC5/Count_Lines.c **** *  void
 413:Generated_Source\PSoC5/Count_Lines.c **** *
 414:Generated_Source\PSoC5/Count_Lines.c **** *******************************************************************************/
 415:Generated_Source\PSoC5/Count_Lines.c **** void Count_Lines_WritePeriod(uint16 period) 
 416:Generated_Source\PSoC5/Count_Lines.c **** {
 261              		.loc 1 416 0
 262              		.cfi_startproc
 263              		@ args = 0, pretend = 0, frame = 0
 264              		@ frame_needed = 0, uses_anonymous_args = 0
 265              		@ link register save eliminated.
 266              	.LVL3:
 417:Generated_Source\PSoC5/Count_Lines.c ****     #if(Count_Lines_UsingFixedFunction)
 418:Generated_Source\PSoC5/Count_Lines.c ****         CY_SET_REG16(Count_Lines_PERIOD_LSB_PTR,(uint16)period);
ARM GAS  C:\Users\sk3220\AppData\Local\Temp\ccvoK08Q.s 			page 13


 419:Generated_Source\PSoC5/Count_Lines.c ****     #else
 420:Generated_Source\PSoC5/Count_Lines.c ****         CY_SET_REG16(Count_Lines_PERIOD_LSB_PTR, period);
 267              		.loc 1 420 0
 268 0000 014B     		ldr	r3, .L29
 269 0002 1880     		strh	r0, [r3]	@ movhi
 270 0004 7047     		bx	lr
 271              	.L30:
 272 0006 00BF     		.align	2
 273              	.L29:
 274 0008 506A0040 		.word	1073769040
 275              		.cfi_endproc
 276              	.LFE11:
 277              		.size	Count_Lines_WritePeriod, .-Count_Lines_WritePeriod
 278              		.section	.text.Count_Lines_ReadPeriod,"ax",%progbits
 279              		.align	2
 280              		.global	Count_Lines_ReadPeriod
 281              		.thumb
 282              		.thumb_func
 283              		.type	Count_Lines_ReadPeriod, %function
 284              	Count_Lines_ReadPeriod:
 285              	.LFB12:
 421:Generated_Source\PSoC5/Count_Lines.c ****     #endif /* (Count_Lines_UsingFixedFunction) */
 422:Generated_Source\PSoC5/Count_Lines.c **** }
 423:Generated_Source\PSoC5/Count_Lines.c **** 
 424:Generated_Source\PSoC5/Count_Lines.c **** 
 425:Generated_Source\PSoC5/Count_Lines.c **** /*******************************************************************************
 426:Generated_Source\PSoC5/Count_Lines.c **** * Function Name: Count_Lines_ReadPeriod
 427:Generated_Source\PSoC5/Count_Lines.c **** ********************************************************************************
 428:Generated_Source\PSoC5/Count_Lines.c **** * Summary:
 429:Generated_Source\PSoC5/Count_Lines.c **** * Reads the current period value without affecting counter operation.
 430:Generated_Source\PSoC5/Count_Lines.c **** *
 431:Generated_Source\PSoC5/Count_Lines.c **** * Parameters:  
 432:Generated_Source\PSoC5/Count_Lines.c **** *  void:  
 433:Generated_Source\PSoC5/Count_Lines.c **** *
 434:Generated_Source\PSoC5/Count_Lines.c **** * Return: 
 435:Generated_Source\PSoC5/Count_Lines.c **** *  (uint16) Present period value.
 436:Generated_Source\PSoC5/Count_Lines.c **** *
 437:Generated_Source\PSoC5/Count_Lines.c **** *******************************************************************************/
 438:Generated_Source\PSoC5/Count_Lines.c **** uint16 Count_Lines_ReadPeriod(void) 
 439:Generated_Source\PSoC5/Count_Lines.c **** {
 286              		.loc 1 439 0
 287              		.cfi_startproc
 288              		@ args = 0, pretend = 0, frame = 0
 289              		@ frame_needed = 0, uses_anonymous_args = 0
 290              		@ link register save eliminated.
 440:Generated_Source\PSoC5/Count_Lines.c ****     #if(Count_Lines_UsingFixedFunction)
 441:Generated_Source\PSoC5/Count_Lines.c ****         return ((uint16)CY_GET_REG16(Count_Lines_PERIOD_LSB_PTR));
 442:Generated_Source\PSoC5/Count_Lines.c ****     #else
 443:Generated_Source\PSoC5/Count_Lines.c ****         return (CY_GET_REG16(Count_Lines_PERIOD_LSB_PTR));
 291              		.loc 1 443 0
 292 0000 014B     		ldr	r3, .L32
 293 0002 1888     		ldrh	r0, [r3]
 444:Generated_Source\PSoC5/Count_Lines.c ****     #endif /* (Count_Lines_UsingFixedFunction) */
 445:Generated_Source\PSoC5/Count_Lines.c **** }
 294              		.loc 1 445 0
 295 0004 80B2     		uxth	r0, r0
 296 0006 7047     		bx	lr
ARM GAS  C:\Users\sk3220\AppData\Local\Temp\ccvoK08Q.s 			page 14


 297              	.L33:
 298              		.align	2
 299              	.L32:
 300 0008 506A0040 		.word	1073769040
 301              		.cfi_endproc
 302              	.LFE12:
 303              		.size	Count_Lines_ReadPeriod, .-Count_Lines_ReadPeriod
 304              		.section	.text.Count_Lines_WriteCompare,"ax",%progbits
 305              		.align	2
 306              		.global	Count_Lines_WriteCompare
 307              		.thumb
 308              		.thumb_func
 309              		.type	Count_Lines_WriteCompare, %function
 310              	Count_Lines_WriteCompare:
 311              	.LFB13:
 446:Generated_Source\PSoC5/Count_Lines.c **** 
 447:Generated_Source\PSoC5/Count_Lines.c **** 
 448:Generated_Source\PSoC5/Count_Lines.c **** #if (!Count_Lines_UsingFixedFunction)
 449:Generated_Source\PSoC5/Count_Lines.c **** /*******************************************************************************
 450:Generated_Source\PSoC5/Count_Lines.c **** * Function Name: Count_Lines_WriteCompare
 451:Generated_Source\PSoC5/Count_Lines.c **** ********************************************************************************
 452:Generated_Source\PSoC5/Count_Lines.c **** * Summary:
 453:Generated_Source\PSoC5/Count_Lines.c **** * Changes the compare value.  The compare output will 
 454:Generated_Source\PSoC5/Count_Lines.c **** * reflect the new value on the next UDB clock.  The compare output will be 
 455:Generated_Source\PSoC5/Count_Lines.c **** * driven high when the present counter value compares true based on the 
 456:Generated_Source\PSoC5/Count_Lines.c **** * configured compare mode setting. 
 457:Generated_Source\PSoC5/Count_Lines.c **** *
 458:Generated_Source\PSoC5/Count_Lines.c **** * Parameters:  
 459:Generated_Source\PSoC5/Count_Lines.c **** *  Compare:  New compare value. 
 460:Generated_Source\PSoC5/Count_Lines.c **** *
 461:Generated_Source\PSoC5/Count_Lines.c **** * Return: 
 462:Generated_Source\PSoC5/Count_Lines.c **** *  void
 463:Generated_Source\PSoC5/Count_Lines.c **** *
 464:Generated_Source\PSoC5/Count_Lines.c **** *******************************************************************************/
 465:Generated_Source\PSoC5/Count_Lines.c **** void Count_Lines_WriteCompare(uint16 compare) \
 466:Generated_Source\PSoC5/Count_Lines.c ****                                    
 467:Generated_Source\PSoC5/Count_Lines.c **** {
 312              		.loc 1 467 0
 313              		.cfi_startproc
 314              		@ args = 0, pretend = 0, frame = 0
 315              		@ frame_needed = 0, uses_anonymous_args = 0
 316              		@ link register save eliminated.
 317              	.LVL4:
 468:Generated_Source\PSoC5/Count_Lines.c ****     #if(Count_Lines_UsingFixedFunction)
 469:Generated_Source\PSoC5/Count_Lines.c ****         CY_SET_REG16(Count_Lines_COMPARE_LSB_PTR, (uint16)compare);
 470:Generated_Source\PSoC5/Count_Lines.c ****     #else
 471:Generated_Source\PSoC5/Count_Lines.c ****         CY_SET_REG16(Count_Lines_COMPARE_LSB_PTR, compare);
 318              		.loc 1 471 0
 319 0000 014B     		ldr	r3, .L35
 320 0002 1880     		strh	r0, [r3]	@ movhi
 321 0004 7047     		bx	lr
 322              	.L36:
 323 0006 00BF     		.align	2
 324              	.L35:
 325 0008 706A0040 		.word	1073769072
 326              		.cfi_endproc
 327              	.LFE13:
ARM GAS  C:\Users\sk3220\AppData\Local\Temp\ccvoK08Q.s 			page 15


 328              		.size	Count_Lines_WriteCompare, .-Count_Lines_WriteCompare
 329              		.section	.text.Count_Lines_ReadCompare,"ax",%progbits
 330              		.align	2
 331              		.global	Count_Lines_ReadCompare
 332              		.thumb
 333              		.thumb_func
 334              		.type	Count_Lines_ReadCompare, %function
 335              	Count_Lines_ReadCompare:
 336              	.LFB14:
 472:Generated_Source\PSoC5/Count_Lines.c ****     #endif /* (Count_Lines_UsingFixedFunction) */
 473:Generated_Source\PSoC5/Count_Lines.c **** }
 474:Generated_Source\PSoC5/Count_Lines.c **** 
 475:Generated_Source\PSoC5/Count_Lines.c **** 
 476:Generated_Source\PSoC5/Count_Lines.c **** /*******************************************************************************
 477:Generated_Source\PSoC5/Count_Lines.c **** * Function Name: Count_Lines_ReadCompare
 478:Generated_Source\PSoC5/Count_Lines.c **** ********************************************************************************
 479:Generated_Source\PSoC5/Count_Lines.c **** * Summary:
 480:Generated_Source\PSoC5/Count_Lines.c **** * Returns the compare value.
 481:Generated_Source\PSoC5/Count_Lines.c **** *
 482:Generated_Source\PSoC5/Count_Lines.c **** * Parameters:  
 483:Generated_Source\PSoC5/Count_Lines.c **** *  void:
 484:Generated_Source\PSoC5/Count_Lines.c **** *
 485:Generated_Source\PSoC5/Count_Lines.c **** * Return: 
 486:Generated_Source\PSoC5/Count_Lines.c **** *  (uint16) Present compare value.
 487:Generated_Source\PSoC5/Count_Lines.c **** *
 488:Generated_Source\PSoC5/Count_Lines.c **** *******************************************************************************/
 489:Generated_Source\PSoC5/Count_Lines.c **** uint16 Count_Lines_ReadCompare(void) 
 490:Generated_Source\PSoC5/Count_Lines.c **** {
 337              		.loc 1 490 0
 338              		.cfi_startproc
 339              		@ args = 0, pretend = 0, frame = 0
 340              		@ frame_needed = 0, uses_anonymous_args = 0
 341              		@ link register save eliminated.
 491:Generated_Source\PSoC5/Count_Lines.c ****     return (CY_GET_REG16(Count_Lines_COMPARE_LSB_PTR));
 342              		.loc 1 491 0
 343 0000 014B     		ldr	r3, .L38
 344 0002 1888     		ldrh	r0, [r3]
 492:Generated_Source\PSoC5/Count_Lines.c **** }
 345              		.loc 1 492 0
 346 0004 80B2     		uxth	r0, r0
 347 0006 7047     		bx	lr
 348              	.L39:
 349              		.align	2
 350              	.L38:
 351 0008 706A0040 		.word	1073769072
 352              		.cfi_endproc
 353              	.LFE14:
 354              		.size	Count_Lines_ReadCompare, .-Count_Lines_ReadCompare
 355              		.section	.text.Count_Lines_ClearFIFO,"ax",%progbits
 356              		.align	2
 357              		.global	Count_Lines_ClearFIFO
 358              		.thumb
 359              		.thumb_func
 360              		.type	Count_Lines_ClearFIFO, %function
 361              	Count_Lines_ClearFIFO:
 362              	.LFB15:
 493:Generated_Source\PSoC5/Count_Lines.c **** 
ARM GAS  C:\Users\sk3220\AppData\Local\Temp\ccvoK08Q.s 			page 16


 494:Generated_Source\PSoC5/Count_Lines.c **** 
 495:Generated_Source\PSoC5/Count_Lines.c **** #if (Count_Lines_COMPARE_MODE_SOFTWARE)
 496:Generated_Source\PSoC5/Count_Lines.c **** /*******************************************************************************
 497:Generated_Source\PSoC5/Count_Lines.c **** * Function Name: Count_Lines_SetCompareMode
 498:Generated_Source\PSoC5/Count_Lines.c **** ********************************************************************************
 499:Generated_Source\PSoC5/Count_Lines.c **** * Summary:
 500:Generated_Source\PSoC5/Count_Lines.c **** *  Sets the software controlled Compare Mode.
 501:Generated_Source\PSoC5/Count_Lines.c **** *
 502:Generated_Source\PSoC5/Count_Lines.c **** * Parameters:
 503:Generated_Source\PSoC5/Count_Lines.c **** *  compareMode:  Compare Mode Enumerated Type.
 504:Generated_Source\PSoC5/Count_Lines.c **** *
 505:Generated_Source\PSoC5/Count_Lines.c **** * Return:
 506:Generated_Source\PSoC5/Count_Lines.c **** *  void
 507:Generated_Source\PSoC5/Count_Lines.c **** *
 508:Generated_Source\PSoC5/Count_Lines.c **** *******************************************************************************/
 509:Generated_Source\PSoC5/Count_Lines.c **** void Count_Lines_SetCompareMode(uint8 compareMode) 
 510:Generated_Source\PSoC5/Count_Lines.c **** {
 511:Generated_Source\PSoC5/Count_Lines.c ****     /* Clear the compare mode bits in the control register */
 512:Generated_Source\PSoC5/Count_Lines.c ****     Count_Lines_CONTROL &= ((uint8)(~Count_Lines_CTRL_CMPMODE_MASK));
 513:Generated_Source\PSoC5/Count_Lines.c ****     
 514:Generated_Source\PSoC5/Count_Lines.c ****     /* Write the new setting */
 515:Generated_Source\PSoC5/Count_Lines.c ****     Count_Lines_CONTROL |= compareMode;
 516:Generated_Source\PSoC5/Count_Lines.c **** }
 517:Generated_Source\PSoC5/Count_Lines.c **** #endif  /* (Count_Lines_COMPARE_MODE_SOFTWARE) */
 518:Generated_Source\PSoC5/Count_Lines.c **** 
 519:Generated_Source\PSoC5/Count_Lines.c **** 
 520:Generated_Source\PSoC5/Count_Lines.c **** #if (Count_Lines_CAPTURE_MODE_SOFTWARE)
 521:Generated_Source\PSoC5/Count_Lines.c **** /*******************************************************************************
 522:Generated_Source\PSoC5/Count_Lines.c **** * Function Name: Count_Lines_SetCaptureMode
 523:Generated_Source\PSoC5/Count_Lines.c **** ********************************************************************************
 524:Generated_Source\PSoC5/Count_Lines.c **** * Summary:
 525:Generated_Source\PSoC5/Count_Lines.c **** *  Sets the software controlled Capture Mode.
 526:Generated_Source\PSoC5/Count_Lines.c **** *
 527:Generated_Source\PSoC5/Count_Lines.c **** * Parameters:
 528:Generated_Source\PSoC5/Count_Lines.c **** *  captureMode:  Capture Mode Enumerated Type.
 529:Generated_Source\PSoC5/Count_Lines.c **** *
 530:Generated_Source\PSoC5/Count_Lines.c **** * Return:
 531:Generated_Source\PSoC5/Count_Lines.c **** *  void
 532:Generated_Source\PSoC5/Count_Lines.c **** *
 533:Generated_Source\PSoC5/Count_Lines.c **** *******************************************************************************/
 534:Generated_Source\PSoC5/Count_Lines.c **** void Count_Lines_SetCaptureMode(uint8 captureMode) 
 535:Generated_Source\PSoC5/Count_Lines.c **** {
 536:Generated_Source\PSoC5/Count_Lines.c ****     /* Clear the capture mode bits in the control register */
 537:Generated_Source\PSoC5/Count_Lines.c ****     Count_Lines_CONTROL &= ((uint8)(~Count_Lines_CTRL_CAPMODE_MASK));
 538:Generated_Source\PSoC5/Count_Lines.c ****     
 539:Generated_Source\PSoC5/Count_Lines.c ****     /* Write the new setting */
 540:Generated_Source\PSoC5/Count_Lines.c ****     Count_Lines_CONTROL |= ((uint8)((uint8)captureMode << Count_Lines_CTRL_CAPMODE0_SHIFT));
 541:Generated_Source\PSoC5/Count_Lines.c **** }
 542:Generated_Source\PSoC5/Count_Lines.c **** #endif  /* (Count_Lines_CAPTURE_MODE_SOFTWARE) */
 543:Generated_Source\PSoC5/Count_Lines.c **** 
 544:Generated_Source\PSoC5/Count_Lines.c **** 
 545:Generated_Source\PSoC5/Count_Lines.c **** /*******************************************************************************
 546:Generated_Source\PSoC5/Count_Lines.c **** * Function Name: Count_Lines_ClearFIFO
 547:Generated_Source\PSoC5/Count_Lines.c **** ********************************************************************************
 548:Generated_Source\PSoC5/Count_Lines.c **** * Summary:
 549:Generated_Source\PSoC5/Count_Lines.c **** *   This function clears all capture data from the capture FIFO
 550:Generated_Source\PSoC5/Count_Lines.c **** *
ARM GAS  C:\Users\sk3220\AppData\Local\Temp\ccvoK08Q.s 			page 17


 551:Generated_Source\PSoC5/Count_Lines.c **** * Parameters:  
 552:Generated_Source\PSoC5/Count_Lines.c **** *  void:
 553:Generated_Source\PSoC5/Count_Lines.c **** *
 554:Generated_Source\PSoC5/Count_Lines.c **** * Return: 
 555:Generated_Source\PSoC5/Count_Lines.c **** *  None
 556:Generated_Source\PSoC5/Count_Lines.c **** *
 557:Generated_Source\PSoC5/Count_Lines.c **** *******************************************************************************/
 558:Generated_Source\PSoC5/Count_Lines.c **** void Count_Lines_ClearFIFO(void) 
 559:Generated_Source\PSoC5/Count_Lines.c **** {
 363              		.loc 1 559 0
 364              		.cfi_startproc
 365              		@ args = 0, pretend = 0, frame = 0
 366              		@ frame_needed = 0, uses_anonymous_args = 0
 367 0000 08B5     		push	{r3, lr}
 368              		.cfi_def_cfa_offset 8
 369              		.cfi_offset 3, -8
 370              		.cfi_offset 14, -4
 560:Generated_Source\PSoC5/Count_Lines.c **** 
 561:Generated_Source\PSoC5/Count_Lines.c ****     while(0u != (Count_Lines_ReadStatusRegister() & Count_Lines_STATUS_FIFONEMP))
 371              		.loc 1 561 0
 372 0002 01E0     		b	.L41
 373              	.L42:
 562:Generated_Source\PSoC5/Count_Lines.c ****     {
 563:Generated_Source\PSoC5/Count_Lines.c ****         (void)Count_Lines_ReadCapture();
 374              		.loc 1 563 0
 375 0004 FFF7FEFF 		bl	Count_Lines_ReadCapture
 376              	.LVL5:
 377              	.L41:
 561:Generated_Source\PSoC5/Count_Lines.c ****     {
 378              		.loc 1 561 0
 379 0008 FFF7FEFF 		bl	Count_Lines_ReadStatusRegister
 380              	.LVL6:
 381 000c 10F0400F 		tst	r0, #64
 382 0010 F8D1     		bne	.L42
 564:Generated_Source\PSoC5/Count_Lines.c ****     }
 565:Generated_Source\PSoC5/Count_Lines.c **** 
 566:Generated_Source\PSoC5/Count_Lines.c **** }
 383              		.loc 1 566 0
 384 0012 08BD     		pop	{r3, pc}
 385              		.cfi_endproc
 386              	.LFE15:
 387              		.size	Count_Lines_ClearFIFO, .-Count_Lines_ClearFIFO
 388              		.section	.text.Count_Lines_Init,"ax",%progbits
 389              		.align	2
 390              		.global	Count_Lines_Init
 391              		.thumb
 392              		.thumb_func
 393              		.type	Count_Lines_Init, %function
 394              	Count_Lines_Init:
 395              	.LFB0:
  38:Generated_Source\PSoC5/Count_Lines.c ****         #if (!Count_Lines_UsingFixedFunction && !Count_Lines_ControlRegRemoved)
 396              		.loc 1 38 0
 397              		.cfi_startproc
 398              		@ args = 0, pretend = 0, frame = 0
 399              		@ frame_needed = 0, uses_anonymous_args = 0
 400 0000 08B5     		push	{r3, lr}
 401              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\sk3220\AppData\Local\Temp\ccvoK08Q.s 			page 18


 402              		.cfi_offset 3, -8
 403              		.cfi_offset 14, -4
  79:Generated_Source\PSoC5/Count_Lines.c ****             Count_Lines_CONTROL = ctrl | Count_Lines_DEFAULT_COMPARE_MODE;
 404              		.loc 1 79 0
 405 0002 114B     		ldr	r3, .L46
 406 0004 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 407 0006 02F0F802 		and	r2, r2, #248
 408              	.LVL7:
  80:Generated_Source\PSoC5/Count_Lines.c ****             
 409              		.loc 1 80 0
 410 000a 1A70     		strb	r2, [r3]
  83:Generated_Source\PSoC5/Count_Lines.c ****             
 411              		.loc 1 83 0
 412 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 413              	.LVL8:
 414 000e 02F0FC02 		and	r2, r2, #252
 415              	.LVL9:
  88:Generated_Source\PSoC5/Count_Lines.c ****             #endif /* 0 != Count_Lines_CAPTURE_MODE */ 
 416              		.loc 1 88 0
 417 0012 1A70     		strb	r2, [r3]
  96:Generated_Source\PSoC5/Count_Lines.c ****         #endif /* (!Count_Lines_UsingFixedFunction) */
 418              		.loc 1 96 0
 419 0014 FFF7FEFF 		bl	Count_Lines_ClearFIFO
 420              	.LVL10:
 100:Generated_Source\PSoC5/Count_Lines.c ****         #if (!(Count_Lines_UsingFixedFunction && (CY_PSOC5A)))
 421              		.loc 1 100 0
 422 0018 FF20     		movs	r0, #255
 423 001a FFF7FEFF 		bl	Count_Lines_WritePeriod
 424              	.LVL11:
 102:Generated_Source\PSoC5/Count_Lines.c ****         #endif /* (!(Count_Lines_UsingFixedFunction && (CY_PSOC5A))) */
 425              		.loc 1 102 0
 426 001e 0020     		movs	r0, #0
 427 0020 FFF7FEFF 		bl	Count_Lines_WriteCounter
 428              	.LVL12:
 104:Generated_Source\PSoC5/Count_Lines.c ****         
 429              		.loc 1 104 0
 430 0024 0120     		movs	r0, #1
 431 0026 FFF7FEFF 		bl	Count_Lines_SetInterruptMode
 432              	.LVL13:
 108:Generated_Source\PSoC5/Count_Lines.c ****             /* Set the compare value (only available to non-fixed function implementation */
 433              		.loc 1 108 0
 434 002a FFF7FEFF 		bl	Count_Lines_ReadStatusRegister
 435              	.LVL14:
 110:Generated_Source\PSoC5/Count_Lines.c ****             /* Use the interrupt output of the status register for IRQ output */
 436              		.loc 1 110 0
 437 002e 9620     		movs	r0, #150
 438 0030 FFF7FEFF 		bl	Count_Lines_WriteCompare
 439              	.LVL15:
 115:Generated_Source\PSoC5/Count_Lines.c ****             
 440              		.loc 1 115 0
 441 0034 FFF7FEFF 		bl	CyEnterCriticalSection
 442              	.LVL16:
 117:Generated_Source\PSoC5/Count_Lines.c ****             
 443              		.loc 1 117 0
 444 0038 044A     		ldr	r2, .L46+4
 445 003a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 446 003c 43F01003 		orr	r3, r3, #16
ARM GAS  C:\Users\sk3220\AppData\Local\Temp\ccvoK08Q.s 			page 19


 447 0040 1370     		strb	r3, [r2]
 120:Generated_Source\PSoC5/Count_Lines.c ****             
 448              		.loc 1 120 0
 449 0042 FFF7FEFF 		bl	CyExitCriticalSection
 450              	.LVL17:
 451 0046 08BD     		pop	{r3, pc}
 452              	.L47:
 453              		.align	2
 454              	.L46:
 455 0048 7B640040 		.word	1073767547
 456 004c 9A650040 		.word	1073767834
 457              		.cfi_endproc
 458              	.LFE0:
 459              		.size	Count_Lines_Init, .-Count_Lines_Init
 460              		.section	.text.Count_Lines_Start,"ax",%progbits
 461              		.align	2
 462              		.global	Count_Lines_Start
 463              		.thumb
 464              		.thumb_func
 465              		.type	Count_Lines_Start, %function
 466              	Count_Lines_Start:
 467              	.LFB2:
 179:Generated_Source\PSoC5/Count_Lines.c ****     if(Count_Lines_initVar == 0u)
 468              		.loc 1 179 0
 469              		.cfi_startproc
 470              		@ args = 0, pretend = 0, frame = 0
 471              		@ frame_needed = 0, uses_anonymous_args = 0
 472 0000 08B5     		push	{r3, lr}
 473              		.cfi_def_cfa_offset 8
 474              		.cfi_offset 3, -8
 475              		.cfi_offset 14, -4
 180:Generated_Source\PSoC5/Count_Lines.c ****     {
 476              		.loc 1 180 0
 477 0002 054B     		ldr	r3, .L51
 478 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 479 0006 23B9     		cbnz	r3, .L49
 182:Generated_Source\PSoC5/Count_Lines.c ****         
 480              		.loc 1 182 0
 481 0008 FFF7FEFF 		bl	Count_Lines_Init
 482              	.LVL18:
 184:Generated_Source\PSoC5/Count_Lines.c ****     }
 483              		.loc 1 184 0
 484 000c 0122     		movs	r2, #1
 485 000e 024B     		ldr	r3, .L51
 486 0010 1A70     		strb	r2, [r3]
 487              	.L49:
 188:Generated_Source\PSoC5/Count_Lines.c **** }
 488              		.loc 1 188 0
 489 0012 FFF7FEFF 		bl	Count_Lines_Enable
 490              	.LVL19:
 491 0016 08BD     		pop	{r3, pc}
 492              	.L52:
 493              		.align	2
 494              	.L51:
 495 0018 00000000 		.word	.LANCHOR0
 496              		.cfi_endproc
 497              	.LFE2:
ARM GAS  C:\Users\sk3220\AppData\Local\Temp\ccvoK08Q.s 			page 20


 498              		.size	Count_Lines_Start, .-Count_Lines_Start
 499              		.global	Count_Lines_initVar
 500              		.bss
 501              		.set	.LANCHOR0,. + 0
 502              		.type	Count_Lines_initVar, %object
 503              		.size	Count_Lines_initVar, 1
 504              	Count_Lines_initVar:
 505 0000 00       		.space	1
 506              		.text
 507              	.Letext0:
 508              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 509              		.file 3 "Generated_Source\\PSoC5\\CyLib.h"
 510              		.section	.debug_info,"",%progbits
 511              	.Ldebug_info0:
 512 0000 40030000 		.4byte	0x340
 513 0004 0400     		.2byte	0x4
 514 0006 00000000 		.4byte	.Ldebug_abbrev0
 515 000a 04       		.byte	0x4
 516 000b 01       		.uleb128 0x1
 517 000c 56010000 		.4byte	.LASF43
 518 0010 0C       		.byte	0xc
 519 0011 18000000 		.4byte	.LASF44
 520 0015 3D000000 		.4byte	.LASF45
 521 0019 00000000 		.4byte	.Ldebug_ranges0+0
 522 001d 00000000 		.4byte	0
 523 0021 00000000 		.4byte	.Ldebug_line0
 524 0025 02       		.uleb128 0x2
 525 0026 01       		.byte	0x1
 526 0027 06       		.byte	0x6
 527 0028 AB030000 		.4byte	.LASF0
 528 002c 02       		.uleb128 0x2
 529 002d 01       		.byte	0x1
 530 002e 08       		.byte	0x8
 531 002f 48010000 		.4byte	.LASF1
 532 0033 02       		.uleb128 0x2
 533 0034 02       		.byte	0x2
 534 0035 05       		.byte	0x5
 535 0036 4B030000 		.4byte	.LASF2
 536 003a 02       		.uleb128 0x2
 537 003b 02       		.byte	0x2
 538 003c 07       		.byte	0x7
 539 003d BF030000 		.4byte	.LASF3
 540 0041 02       		.uleb128 0x2
 541 0042 04       		.byte	0x4
 542 0043 05       		.byte	0x5
 543 0044 7E030000 		.4byte	.LASF4
 544 0048 02       		.uleb128 0x2
 545 0049 04       		.byte	0x4
 546 004a 07       		.byte	0x7
 547 004b E9010000 		.4byte	.LASF5
 548 004f 02       		.uleb128 0x2
 549 0050 08       		.byte	0x8
 550 0051 05       		.byte	0x5
 551 0052 38030000 		.4byte	.LASF6
 552 0056 02       		.uleb128 0x2
 553 0057 08       		.byte	0x8
 554 0058 07       		.byte	0x7
ARM GAS  C:\Users\sk3220\AppData\Local\Temp\ccvoK08Q.s 			page 21


 555 0059 31010000 		.4byte	.LASF7
 556 005d 03       		.uleb128 0x3
 557 005e 04       		.byte	0x4
 558 005f 05       		.byte	0x5
 559 0060 696E7400 		.ascii	"int\000"
 560 0064 02       		.uleb128 0x2
 561 0065 04       		.byte	0x4
 562 0066 07       		.byte	0x7
 563 0067 E0020000 		.4byte	.LASF8
 564 006b 04       		.uleb128 0x4
 565 006c FB010000 		.4byte	.LASF9
 566 0070 02       		.byte	0x2
 567 0071 E801     		.2byte	0x1e8
 568 0073 2C000000 		.4byte	0x2c
 569 0077 04       		.uleb128 0x4
 570 0078 AB020000 		.4byte	.LASF10
 571 007c 02       		.byte	0x2
 572 007d E901     		.2byte	0x1e9
 573 007f 3A000000 		.4byte	0x3a
 574 0083 02       		.uleb128 0x2
 575 0084 04       		.byte	0x4
 576 0085 04       		.byte	0x4
 577 0086 23010000 		.4byte	.LASF11
 578 008a 02       		.uleb128 0x2
 579 008b 08       		.byte	0x8
 580 008c 04       		.byte	0x4
 581 008d 8C020000 		.4byte	.LASF12
 582 0091 02       		.uleb128 0x2
 583 0092 01       		.byte	0x1
 584 0093 08       		.byte	0x8
 585 0094 46030000 		.4byte	.LASF13
 586 0098 04       		.uleb128 0x4
 587 0099 E4010000 		.4byte	.LASF14
 588 009d 02       		.byte	0x2
 589 009e 9202     		.2byte	0x292
 590 00a0 A4000000 		.4byte	0xa4
 591 00a4 05       		.uleb128 0x5
 592 00a5 6B000000 		.4byte	0x6b
 593 00a9 04       		.uleb128 0x4
 594 00aa 00000000 		.4byte	.LASF15
 595 00ae 02       		.byte	0x2
 596 00af 9302     		.2byte	0x293
 597 00b1 B5000000 		.4byte	0xb5
 598 00b5 05       		.uleb128 0x5
 599 00b6 77000000 		.4byte	0x77
 600 00ba 02       		.uleb128 0x2
 601 00bb 08       		.byte	0x8
 602 00bc 04       		.byte	0x4
 603 00bd 9F030000 		.4byte	.LASF16
 604 00c1 02       		.uleb128 0x2
 605 00c2 04       		.byte	0x4
 606 00c3 07       		.byte	0x7
 607 00c4 1E030000 		.4byte	.LASF17
 608 00c8 06       		.uleb128 0x6
 609 00c9 C0000000 		.4byte	.LASF18
 610 00cd 01       		.byte	0x1
 611 00ce 8F       		.byte	0x8f
ARM GAS  C:\Users\sk3220\AppData\Local\Temp\ccvoK08Q.s 			page 22


 612 00cf 00000000 		.4byte	.LFB1
 613 00d3 10000000 		.4byte	.LFE1-.LFB1
 614 00d7 01       		.uleb128 0x1
 615 00d8 9C       		.byte	0x9c
 616 00d9 06       		.uleb128 0x6
 617 00da 27030000 		.4byte	.LASF19
 618 00de 01       		.byte	0x1
 619 00df D0       		.byte	0xd0
 620 00e0 00000000 		.4byte	.LFB3
 621 00e4 10000000 		.4byte	.LFE3-.LFB3
 622 00e8 01       		.uleb128 0x1
 623 00e9 9C       		.byte	0x9c
 624 00ea 07       		.uleb128 0x7
 625 00eb EB000000 		.4byte	.LASF22
 626 00ef 01       		.byte	0x1
 627 00f0 ED       		.byte	0xed
 628 00f1 00000000 		.4byte	.LFB4
 629 00f5 0C000000 		.4byte	.LFE4-.LFB4
 630 00f9 01       		.uleb128 0x1
 631 00fa 9C       		.byte	0x9c
 632 00fb 0D010000 		.4byte	0x10d
 633 00ff 08       		.uleb128 0x8
 634 0100 09020000 		.4byte	.LASF24
 635 0104 01       		.byte	0x1
 636 0105 ED       		.byte	0xed
 637 0106 6B000000 		.4byte	0x6b
 638 010a 01       		.uleb128 0x1
 639 010b 50       		.byte	0x50
 640 010c 00       		.byte	0
 641 010d 09       		.uleb128 0x9
 642 010e 4D020000 		.4byte	.LASF20
 643 0112 01       		.byte	0x1
 644 0113 0501     		.2byte	0x105
 645 0115 6B000000 		.4byte	0x6b
 646 0119 00000000 		.4byte	.LFB5
 647 011d 0C000000 		.4byte	.LFE5-.LFB5
 648 0121 01       		.uleb128 0x1
 649 0122 9C       		.byte	0x9c
 650 0123 09       		.uleb128 0x9
 651 0124 6C020000 		.4byte	.LASF21
 652 0128 01       		.byte	0x1
 653 0129 1B01     		.2byte	0x11b
 654 012b 6B000000 		.4byte	0x6b
 655 012f 00000000 		.4byte	.LFB6
 656 0133 0C000000 		.4byte	.LFE6-.LFB6
 657 0137 01       		.uleb128 0x1
 658 0138 9C       		.byte	0x9c
 659 0139 0A       		.uleb128 0xa
 660 013a 2C020000 		.4byte	.LASF23
 661 013e 01       		.byte	0x1
 662 013f 3001     		.2byte	0x130
 663 0141 00000000 		.4byte	.LFB7
 664 0145 0C000000 		.4byte	.LFE7-.LFB7
 665 0149 01       		.uleb128 0x1
 666 014a 9C       		.byte	0x9c
 667 014b 5E010000 		.4byte	0x15e
 668 014f 0B       		.uleb128 0xb
ARM GAS  C:\Users\sk3220\AppData\Local\Temp\ccvoK08Q.s 			page 23


 669 0150 01020000 		.4byte	.LASF25
 670 0154 01       		.byte	0x1
 671 0155 3001     		.2byte	0x130
 672 0157 6B000000 		.4byte	0x6b
 673 015b 01       		.uleb128 0x1
 674 015c 50       		.byte	0x50
 675 015d 00       		.byte	0
 676 015e 0A       		.uleb128 0xa
 677 015f A7000000 		.4byte	.LASF26
 678 0163 01       		.byte	0x1
 679 0164 4601     		.2byte	0x146
 680 0166 00000000 		.4byte	.LFB8
 681 016a 0C000000 		.4byte	.LFE8-.LFB8
 682 016e 01       		.uleb128 0x1
 683 016f 9C       		.byte	0x9c
 684 0170 83010000 		.4byte	0x183
 685 0174 0B       		.uleb128 0xb
 686 0175 29010000 		.4byte	.LASF27
 687 0179 01       		.byte	0x1
 688 017a 4601     		.2byte	0x146
 689 017c 77000000 		.4byte	0x77
 690 0180 01       		.uleb128 0x1
 691 0181 50       		.byte	0x50
 692 0182 00       		.byte	0
 693 0183 09       		.uleb128 0x9
 694 0184 D3000000 		.4byte	.LASF28
 695 0188 01       		.byte	0x1
 696 0189 6501     		.2byte	0x165
 697 018b 77000000 		.4byte	0x77
 698 018f 00000000 		.4byte	.LFB9
 699 0193 14000000 		.4byte	.LFE9-.LFB9
 700 0197 01       		.uleb128 0x1
 701 0198 9C       		.byte	0x9c
 702 0199 09       		.uleb128 0x9
 703 019a 87030000 		.4byte	.LASF29
 704 019e 01       		.byte	0x1
 705 019f 8601     		.2byte	0x186
 706 01a1 77000000 		.4byte	0x77
 707 01a5 00000000 		.4byte	.LFB10
 708 01a9 0C000000 		.4byte	.LFE10-.LFB10
 709 01ad 01       		.uleb128 0x1
 710 01ae 9C       		.byte	0x9c
 711 01af 0A       		.uleb128 0xa
 712 01b0 93020000 		.4byte	.LASF30
 713 01b4 01       		.byte	0x1
 714 01b5 9F01     		.2byte	0x19f
 715 01b7 00000000 		.4byte	.LFB11
 716 01bb 0C000000 		.4byte	.LFE11-.LFB11
 717 01bf 01       		.uleb128 0x1
 718 01c0 9C       		.byte	0x9c
 719 01c1 D4010000 		.4byte	0x1d4
 720 01c5 0B       		.uleb128 0xb
 721 01c6 A0000000 		.4byte	.LASF31
 722 01ca 01       		.byte	0x1
 723 01cb 9F01     		.2byte	0x19f
 724 01cd 77000000 		.4byte	0x77
 725 01d1 01       		.uleb128 0x1
ARM GAS  C:\Users\sk3220\AppData\Local\Temp\ccvoK08Q.s 			page 24


 726 01d2 50       		.byte	0x50
 727 01d3 00       		.byte	0
 728 01d4 09       		.uleb128 0x9
 729 01d5 B2020000 		.4byte	.LASF32
 730 01d9 01       		.byte	0x1
 731 01da B601     		.2byte	0x1b6
 732 01dc 77000000 		.4byte	0x77
 733 01e0 00000000 		.4byte	.LFB12
 734 01e4 0C000000 		.4byte	.LFE12-.LFB12
 735 01e8 01       		.uleb128 0x1
 736 01e9 9C       		.byte	0x9c
 737 01ea 0A       		.uleb128 0xa
 738 01eb D2030000 		.4byte	.LASF33
 739 01ef 01       		.byte	0x1
 740 01f0 D101     		.2byte	0x1d1
 741 01f2 00000000 		.4byte	.LFB13
 742 01f6 0C000000 		.4byte	.LFE13-.LFB13
 743 01fa 01       		.uleb128 0x1
 744 01fb 9C       		.byte	0x9c
 745 01fc 0F020000 		.4byte	0x20f
 746 0200 0B       		.uleb128 0xb
 747 0201 B7030000 		.4byte	.LASF34
 748 0205 01       		.byte	0x1
 749 0206 D101     		.2byte	0x1d1
 750 0208 77000000 		.4byte	0x77
 751 020c 01       		.uleb128 0x1
 752 020d 50       		.byte	0x50
 753 020e 00       		.byte	0
 754 020f 09       		.uleb128 0x9
 755 0210 55030000 		.4byte	.LASF35
 756 0214 01       		.byte	0x1
 757 0215 E901     		.2byte	0x1e9
 758 0217 77000000 		.4byte	0x77
 759 021b 00000000 		.4byte	.LFB14
 760 021f 0C000000 		.4byte	.LFE14-.LFB14
 761 0223 01       		.uleb128 0x1
 762 0224 9C       		.byte	0x9c
 763 0225 0A       		.uleb128 0xa
 764 0226 03030000 		.4byte	.LASF36
 765 022a 01       		.byte	0x1
 766 022b 2E02     		.2byte	0x22e
 767 022d 00000000 		.4byte	.LFB15
 768 0231 14000000 		.4byte	.LFE15-.LFB15
 769 0235 01       		.uleb128 0x1
 770 0236 9C       		.byte	0x9c
 771 0237 4E020000 		.4byte	0x24e
 772 023b 0C       		.uleb128 0xc
 773 023c 08000000 		.4byte	.LVL5
 774 0240 99010000 		.4byte	0x199
 775 0244 0C       		.uleb128 0xc
 776 0245 0C000000 		.4byte	.LVL6
 777 0249 0D010000 		.4byte	0x10d
 778 024d 00       		.byte	0
 779 024e 07       		.uleb128 0x7
 780 024f 6D030000 		.4byte	.LASF37
 781 0253 01       		.byte	0x1
 782 0254 25       		.byte	0x25
ARM GAS  C:\Users\sk3220\AppData\Local\Temp\ccvoK08Q.s 			page 25


 783 0255 00000000 		.4byte	.LFB0
 784 0259 50000000 		.4byte	.LFE0-.LFB0
 785 025d 01       		.uleb128 0x1
 786 025e 9C       		.byte	0x9c
 787 025f F4020000 		.4byte	0x2f4
 788 0263 0D       		.uleb128 0xd
 789 0264 19030000 		.4byte	.LASF38
 790 0268 01       		.byte	0x1
 791 0269 28       		.byte	0x28
 792 026a 6B000000 		.4byte	0x6b
 793 026e 00000000 		.4byte	.LLST0
 794 0272 0D       		.uleb128 0xd
 795 0273 08010000 		.4byte	.LASF39
 796 0277 01       		.byte	0x1
 797 0278 2D       		.byte	0x2d
 798 0279 6B000000 		.4byte	0x6b
 799 027d 2A000000 		.4byte	.LLST1
 800 0281 0C       		.uleb128 0xc
 801 0282 18000000 		.4byte	.LVL10
 802 0286 25020000 		.4byte	0x225
 803 028a 0E       		.uleb128 0xe
 804 028b 1E000000 		.4byte	.LVL11
 805 028f AF010000 		.4byte	0x1af
 806 0293 9E020000 		.4byte	0x29e
 807 0297 0F       		.uleb128 0xf
 808 0298 01       		.uleb128 0x1
 809 0299 50       		.byte	0x50
 810 029a 02       		.uleb128 0x2
 811 029b 08       		.byte	0x8
 812 029c FF       		.byte	0xff
 813 029d 00       		.byte	0
 814 029e 0E       		.uleb128 0xe
 815 029f 24000000 		.4byte	.LVL12
 816 02a3 5E010000 		.4byte	0x15e
 817 02a7 B1020000 		.4byte	0x2b1
 818 02ab 0F       		.uleb128 0xf
 819 02ac 01       		.uleb128 0x1
 820 02ad 50       		.byte	0x50
 821 02ae 01       		.uleb128 0x1
 822 02af 30       		.byte	0x30
 823 02b0 00       		.byte	0
 824 02b1 0E       		.uleb128 0xe
 825 02b2 2A000000 		.4byte	.LVL13
 826 02b6 EA000000 		.4byte	0xea
 827 02ba C4020000 		.4byte	0x2c4
 828 02be 0F       		.uleb128 0xf
 829 02bf 01       		.uleb128 0x1
 830 02c0 50       		.byte	0x50
 831 02c1 01       		.uleb128 0x1
 832 02c2 31       		.byte	0x31
 833 02c3 00       		.byte	0
 834 02c4 0C       		.uleb128 0xc
 835 02c5 2E000000 		.4byte	.LVL14
 836 02c9 0D010000 		.4byte	0x10d
 837 02cd 0E       		.uleb128 0xe
 838 02ce 34000000 		.4byte	.LVL15
 839 02d2 EA010000 		.4byte	0x1ea
ARM GAS  C:\Users\sk3220\AppData\Local\Temp\ccvoK08Q.s 			page 26


 840 02d6 E1020000 		.4byte	0x2e1
 841 02da 0F       		.uleb128 0xf
 842 02db 01       		.uleb128 0x1
 843 02dc 50       		.byte	0x50
 844 02dd 02       		.uleb128 0x2
 845 02de 08       		.byte	0x8
 846 02df 96       		.byte	0x96
 847 02e0 00       		.byte	0
 848 02e1 0C       		.uleb128 0xc
 849 02e2 38000000 		.4byte	.LVL16
 850 02e6 2D030000 		.4byte	0x32d
 851 02ea 0C       		.uleb128 0xc
 852 02eb 46000000 		.4byte	.LVL17
 853 02ef 38030000 		.4byte	0x338
 854 02f3 00       		.byte	0
 855 02f4 07       		.uleb128 0x7
 856 02f5 06000000 		.4byte	.LASF40
 857 02f9 01       		.byte	0x1
 858 02fa B2       		.byte	0xb2
 859 02fb 00000000 		.4byte	.LFB2
 860 02ff 1C000000 		.4byte	.LFE2-.LFB2
 861 0303 01       		.uleb128 0x1
 862 0304 9C       		.byte	0x9c
 863 0305 1C030000 		.4byte	0x31c
 864 0309 0C       		.uleb128 0xc
 865 030a 0C000000 		.4byte	.LVL18
 866 030e 4E020000 		.4byte	0x24e
 867 0312 0C       		.uleb128 0xc
 868 0313 16000000 		.4byte	.LVL19
 869 0317 C8000000 		.4byte	0xc8
 870 031b 00       		.byte	0
 871 031c 10       		.uleb128 0x10
 872 031d 18020000 		.4byte	.LASF46
 873 0321 01       		.byte	0x1
 874 0322 15       		.byte	0x15
 875 0323 6B000000 		.4byte	0x6b
 876 0327 05       		.uleb128 0x5
 877 0328 03       		.byte	0x3
 878 0329 00000000 		.4byte	Count_Lines_initVar
 879 032d 11       		.uleb128 0x11
 880 032e C9020000 		.4byte	.LASF41
 881 0332 C9020000 		.4byte	.LASF41
 882 0336 03       		.byte	0x3
 883 0337 7D       		.byte	0x7d
 884 0338 11       		.uleb128 0x11
 885 0339 ED020000 		.4byte	.LASF42
 886 033d ED020000 		.4byte	.LASF42
 887 0341 03       		.byte	0x3
 888 0342 7E       		.byte	0x7e
 889 0343 00       		.byte	0
 890              		.section	.debug_abbrev,"",%progbits
 891              	.Ldebug_abbrev0:
 892 0000 01       		.uleb128 0x1
 893 0001 11       		.uleb128 0x11
 894 0002 01       		.byte	0x1
 895 0003 25       		.uleb128 0x25
 896 0004 0E       		.uleb128 0xe
ARM GAS  C:\Users\sk3220\AppData\Local\Temp\ccvoK08Q.s 			page 27


 897 0005 13       		.uleb128 0x13
 898 0006 0B       		.uleb128 0xb
 899 0007 03       		.uleb128 0x3
 900 0008 0E       		.uleb128 0xe
 901 0009 1B       		.uleb128 0x1b
 902 000a 0E       		.uleb128 0xe
 903 000b 55       		.uleb128 0x55
 904 000c 17       		.uleb128 0x17
 905 000d 11       		.uleb128 0x11
 906 000e 01       		.uleb128 0x1
 907 000f 10       		.uleb128 0x10
 908 0010 17       		.uleb128 0x17
 909 0011 00       		.byte	0
 910 0012 00       		.byte	0
 911 0013 02       		.uleb128 0x2
 912 0014 24       		.uleb128 0x24
 913 0015 00       		.byte	0
 914 0016 0B       		.uleb128 0xb
 915 0017 0B       		.uleb128 0xb
 916 0018 3E       		.uleb128 0x3e
 917 0019 0B       		.uleb128 0xb
 918 001a 03       		.uleb128 0x3
 919 001b 0E       		.uleb128 0xe
 920 001c 00       		.byte	0
 921 001d 00       		.byte	0
 922 001e 03       		.uleb128 0x3
 923 001f 24       		.uleb128 0x24
 924 0020 00       		.byte	0
 925 0021 0B       		.uleb128 0xb
 926 0022 0B       		.uleb128 0xb
 927 0023 3E       		.uleb128 0x3e
 928 0024 0B       		.uleb128 0xb
 929 0025 03       		.uleb128 0x3
 930 0026 08       		.uleb128 0x8
 931 0027 00       		.byte	0
 932 0028 00       		.byte	0
 933 0029 04       		.uleb128 0x4
 934 002a 16       		.uleb128 0x16
 935 002b 00       		.byte	0
 936 002c 03       		.uleb128 0x3
 937 002d 0E       		.uleb128 0xe
 938 002e 3A       		.uleb128 0x3a
 939 002f 0B       		.uleb128 0xb
 940 0030 3B       		.uleb128 0x3b
 941 0031 05       		.uleb128 0x5
 942 0032 49       		.uleb128 0x49
 943 0033 13       		.uleb128 0x13
 944 0034 00       		.byte	0
 945 0035 00       		.byte	0
 946 0036 05       		.uleb128 0x5
 947 0037 35       		.uleb128 0x35
 948 0038 00       		.byte	0
 949 0039 49       		.uleb128 0x49
 950 003a 13       		.uleb128 0x13
 951 003b 00       		.byte	0
 952 003c 00       		.byte	0
 953 003d 06       		.uleb128 0x6
ARM GAS  C:\Users\sk3220\AppData\Local\Temp\ccvoK08Q.s 			page 28


 954 003e 2E       		.uleb128 0x2e
 955 003f 00       		.byte	0
 956 0040 3F       		.uleb128 0x3f
 957 0041 19       		.uleb128 0x19
 958 0042 03       		.uleb128 0x3
 959 0043 0E       		.uleb128 0xe
 960 0044 3A       		.uleb128 0x3a
 961 0045 0B       		.uleb128 0xb
 962 0046 3B       		.uleb128 0x3b
 963 0047 0B       		.uleb128 0xb
 964 0048 27       		.uleb128 0x27
 965 0049 19       		.uleb128 0x19
 966 004a 11       		.uleb128 0x11
 967 004b 01       		.uleb128 0x1
 968 004c 12       		.uleb128 0x12
 969 004d 06       		.uleb128 0x6
 970 004e 40       		.uleb128 0x40
 971 004f 18       		.uleb128 0x18
 972 0050 9742     		.uleb128 0x2117
 973 0052 19       		.uleb128 0x19
 974 0053 00       		.byte	0
 975 0054 00       		.byte	0
 976 0055 07       		.uleb128 0x7
 977 0056 2E       		.uleb128 0x2e
 978 0057 01       		.byte	0x1
 979 0058 3F       		.uleb128 0x3f
 980 0059 19       		.uleb128 0x19
 981 005a 03       		.uleb128 0x3
 982 005b 0E       		.uleb128 0xe
 983 005c 3A       		.uleb128 0x3a
 984 005d 0B       		.uleb128 0xb
 985 005e 3B       		.uleb128 0x3b
 986 005f 0B       		.uleb128 0xb
 987 0060 27       		.uleb128 0x27
 988 0061 19       		.uleb128 0x19
 989 0062 11       		.uleb128 0x11
 990 0063 01       		.uleb128 0x1
 991 0064 12       		.uleb128 0x12
 992 0065 06       		.uleb128 0x6
 993 0066 40       		.uleb128 0x40
 994 0067 18       		.uleb128 0x18
 995 0068 9742     		.uleb128 0x2117
 996 006a 19       		.uleb128 0x19
 997 006b 01       		.uleb128 0x1
 998 006c 13       		.uleb128 0x13
 999 006d 00       		.byte	0
 1000 006e 00       		.byte	0
 1001 006f 08       		.uleb128 0x8
 1002 0070 05       		.uleb128 0x5
 1003 0071 00       		.byte	0
 1004 0072 03       		.uleb128 0x3
 1005 0073 0E       		.uleb128 0xe
 1006 0074 3A       		.uleb128 0x3a
 1007 0075 0B       		.uleb128 0xb
 1008 0076 3B       		.uleb128 0x3b
 1009 0077 0B       		.uleb128 0xb
 1010 0078 49       		.uleb128 0x49
ARM GAS  C:\Users\sk3220\AppData\Local\Temp\ccvoK08Q.s 			page 29


 1011 0079 13       		.uleb128 0x13
 1012 007a 02       		.uleb128 0x2
 1013 007b 18       		.uleb128 0x18
 1014 007c 00       		.byte	0
 1015 007d 00       		.byte	0
 1016 007e 09       		.uleb128 0x9
 1017 007f 2E       		.uleb128 0x2e
 1018 0080 00       		.byte	0
 1019 0081 3F       		.uleb128 0x3f
 1020 0082 19       		.uleb128 0x19
 1021 0083 03       		.uleb128 0x3
 1022 0084 0E       		.uleb128 0xe
 1023 0085 3A       		.uleb128 0x3a
 1024 0086 0B       		.uleb128 0xb
 1025 0087 3B       		.uleb128 0x3b
 1026 0088 05       		.uleb128 0x5
 1027 0089 27       		.uleb128 0x27
 1028 008a 19       		.uleb128 0x19
 1029 008b 49       		.uleb128 0x49
 1030 008c 13       		.uleb128 0x13
 1031 008d 11       		.uleb128 0x11
 1032 008e 01       		.uleb128 0x1
 1033 008f 12       		.uleb128 0x12
 1034 0090 06       		.uleb128 0x6
 1035 0091 40       		.uleb128 0x40
 1036 0092 18       		.uleb128 0x18
 1037 0093 9742     		.uleb128 0x2117
 1038 0095 19       		.uleb128 0x19
 1039 0096 00       		.byte	0
 1040 0097 00       		.byte	0
 1041 0098 0A       		.uleb128 0xa
 1042 0099 2E       		.uleb128 0x2e
 1043 009a 01       		.byte	0x1
 1044 009b 3F       		.uleb128 0x3f
 1045 009c 19       		.uleb128 0x19
 1046 009d 03       		.uleb128 0x3
 1047 009e 0E       		.uleb128 0xe
 1048 009f 3A       		.uleb128 0x3a
 1049 00a0 0B       		.uleb128 0xb
 1050 00a1 3B       		.uleb128 0x3b
 1051 00a2 05       		.uleb128 0x5
 1052 00a3 27       		.uleb128 0x27
 1053 00a4 19       		.uleb128 0x19
 1054 00a5 11       		.uleb128 0x11
 1055 00a6 01       		.uleb128 0x1
 1056 00a7 12       		.uleb128 0x12
 1057 00a8 06       		.uleb128 0x6
 1058 00a9 40       		.uleb128 0x40
 1059 00aa 18       		.uleb128 0x18
 1060 00ab 9742     		.uleb128 0x2117
 1061 00ad 19       		.uleb128 0x19
 1062 00ae 01       		.uleb128 0x1
 1063 00af 13       		.uleb128 0x13
 1064 00b0 00       		.byte	0
 1065 00b1 00       		.byte	0
 1066 00b2 0B       		.uleb128 0xb
 1067 00b3 05       		.uleb128 0x5
ARM GAS  C:\Users\sk3220\AppData\Local\Temp\ccvoK08Q.s 			page 30


 1068 00b4 00       		.byte	0
 1069 00b5 03       		.uleb128 0x3
 1070 00b6 0E       		.uleb128 0xe
 1071 00b7 3A       		.uleb128 0x3a
 1072 00b8 0B       		.uleb128 0xb
 1073 00b9 3B       		.uleb128 0x3b
 1074 00ba 05       		.uleb128 0x5
 1075 00bb 49       		.uleb128 0x49
 1076 00bc 13       		.uleb128 0x13
 1077 00bd 02       		.uleb128 0x2
 1078 00be 18       		.uleb128 0x18
 1079 00bf 00       		.byte	0
 1080 00c0 00       		.byte	0
 1081 00c1 0C       		.uleb128 0xc
 1082 00c2 898201   		.uleb128 0x4109
 1083 00c5 00       		.byte	0
 1084 00c6 11       		.uleb128 0x11
 1085 00c7 01       		.uleb128 0x1
 1086 00c8 31       		.uleb128 0x31
 1087 00c9 13       		.uleb128 0x13
 1088 00ca 00       		.byte	0
 1089 00cb 00       		.byte	0
 1090 00cc 0D       		.uleb128 0xd
 1091 00cd 34       		.uleb128 0x34
 1092 00ce 00       		.byte	0
 1093 00cf 03       		.uleb128 0x3
 1094 00d0 0E       		.uleb128 0xe
 1095 00d1 3A       		.uleb128 0x3a
 1096 00d2 0B       		.uleb128 0xb
 1097 00d3 3B       		.uleb128 0x3b
 1098 00d4 0B       		.uleb128 0xb
 1099 00d5 49       		.uleb128 0x49
 1100 00d6 13       		.uleb128 0x13
 1101 00d7 02       		.uleb128 0x2
 1102 00d8 17       		.uleb128 0x17
 1103 00d9 00       		.byte	0
 1104 00da 00       		.byte	0
 1105 00db 0E       		.uleb128 0xe
 1106 00dc 898201   		.uleb128 0x4109
 1107 00df 01       		.byte	0x1
 1108 00e0 11       		.uleb128 0x11
 1109 00e1 01       		.uleb128 0x1
 1110 00e2 31       		.uleb128 0x31
 1111 00e3 13       		.uleb128 0x13
 1112 00e4 01       		.uleb128 0x1
 1113 00e5 13       		.uleb128 0x13
 1114 00e6 00       		.byte	0
 1115 00e7 00       		.byte	0
 1116 00e8 0F       		.uleb128 0xf
 1117 00e9 8A8201   		.uleb128 0x410a
 1118 00ec 00       		.byte	0
 1119 00ed 02       		.uleb128 0x2
 1120 00ee 18       		.uleb128 0x18
 1121 00ef 9142     		.uleb128 0x2111
 1122 00f1 18       		.uleb128 0x18
 1123 00f2 00       		.byte	0
 1124 00f3 00       		.byte	0
ARM GAS  C:\Users\sk3220\AppData\Local\Temp\ccvoK08Q.s 			page 31


 1125 00f4 10       		.uleb128 0x10
 1126 00f5 34       		.uleb128 0x34
 1127 00f6 00       		.byte	0
 1128 00f7 03       		.uleb128 0x3
 1129 00f8 0E       		.uleb128 0xe
 1130 00f9 3A       		.uleb128 0x3a
 1131 00fa 0B       		.uleb128 0xb
 1132 00fb 3B       		.uleb128 0x3b
 1133 00fc 0B       		.uleb128 0xb
 1134 00fd 49       		.uleb128 0x49
 1135 00fe 13       		.uleb128 0x13
 1136 00ff 3F       		.uleb128 0x3f
 1137 0100 19       		.uleb128 0x19
 1138 0101 02       		.uleb128 0x2
 1139 0102 18       		.uleb128 0x18
 1140 0103 00       		.byte	0
 1141 0104 00       		.byte	0
 1142 0105 11       		.uleb128 0x11
 1143 0106 2E       		.uleb128 0x2e
 1144 0107 00       		.byte	0
 1145 0108 3F       		.uleb128 0x3f
 1146 0109 19       		.uleb128 0x19
 1147 010a 3C       		.uleb128 0x3c
 1148 010b 19       		.uleb128 0x19
 1149 010c 6E       		.uleb128 0x6e
 1150 010d 0E       		.uleb128 0xe
 1151 010e 03       		.uleb128 0x3
 1152 010f 0E       		.uleb128 0xe
 1153 0110 3A       		.uleb128 0x3a
 1154 0111 0B       		.uleb128 0xb
 1155 0112 3B       		.uleb128 0x3b
 1156 0113 0B       		.uleb128 0xb
 1157 0114 00       		.byte	0
 1158 0115 00       		.byte	0
 1159 0116 00       		.byte	0
 1160              		.section	.debug_loc,"",%progbits
 1161              	.Ldebug_loc0:
 1162              	.LLST0:
 1163 0000 0A000000 		.4byte	.LVL7
 1164 0004 0E000000 		.4byte	.LVL8
 1165 0008 0100     		.2byte	0x1
 1166 000a 52       		.byte	0x52
 1167 000b 0E000000 		.4byte	.LVL8
 1168 000f 12000000 		.4byte	.LVL9
 1169 0013 0200     		.2byte	0x2
 1170 0015 73       		.byte	0x73
 1171 0016 00       		.sleb128 0
 1172 0017 12000000 		.4byte	.LVL9
 1173 001b 17000000 		.4byte	.LVL10-1
 1174 001f 0100     		.2byte	0x1
 1175 0021 52       		.byte	0x52
 1176 0022 00000000 		.4byte	0
 1177 0026 00000000 		.4byte	0
 1178              	.LLST1:
 1179 002a 38000000 		.4byte	.LVL16
 1180 002e 45000000 		.4byte	.LVL17-1
 1181 0032 0100     		.2byte	0x1
ARM GAS  C:\Users\sk3220\AppData\Local\Temp\ccvoK08Q.s 			page 32


 1182 0034 50       		.byte	0x50
 1183 0035 00000000 		.4byte	0
 1184 0039 00000000 		.4byte	0
 1185              		.section	.debug_aranges,"",%progbits
 1186 0000 94000000 		.4byte	0x94
 1187 0004 0200     		.2byte	0x2
 1188 0006 00000000 		.4byte	.Ldebug_info0
 1189 000a 04       		.byte	0x4
 1190 000b 00       		.byte	0
 1191 000c 0000     		.2byte	0
 1192 000e 0000     		.2byte	0
 1193 0010 00000000 		.4byte	.LFB1
 1194 0014 10000000 		.4byte	.LFE1-.LFB1
 1195 0018 00000000 		.4byte	.LFB3
 1196 001c 10000000 		.4byte	.LFE3-.LFB3
 1197 0020 00000000 		.4byte	.LFB4
 1198 0024 0C000000 		.4byte	.LFE4-.LFB4
 1199 0028 00000000 		.4byte	.LFB5
 1200 002c 0C000000 		.4byte	.LFE5-.LFB5
 1201 0030 00000000 		.4byte	.LFB6
 1202 0034 0C000000 		.4byte	.LFE6-.LFB6
 1203 0038 00000000 		.4byte	.LFB7
 1204 003c 0C000000 		.4byte	.LFE7-.LFB7
 1205 0040 00000000 		.4byte	.LFB8
 1206 0044 0C000000 		.4byte	.LFE8-.LFB8
 1207 0048 00000000 		.4byte	.LFB9
 1208 004c 14000000 		.4byte	.LFE9-.LFB9
 1209 0050 00000000 		.4byte	.LFB10
 1210 0054 0C000000 		.4byte	.LFE10-.LFB10
 1211 0058 00000000 		.4byte	.LFB11
 1212 005c 0C000000 		.4byte	.LFE11-.LFB11
 1213 0060 00000000 		.4byte	.LFB12
 1214 0064 0C000000 		.4byte	.LFE12-.LFB12
 1215 0068 00000000 		.4byte	.LFB13
 1216 006c 0C000000 		.4byte	.LFE13-.LFB13
 1217 0070 00000000 		.4byte	.LFB14
 1218 0074 0C000000 		.4byte	.LFE14-.LFB14
 1219 0078 00000000 		.4byte	.LFB15
 1220 007c 14000000 		.4byte	.LFE15-.LFB15
 1221 0080 00000000 		.4byte	.LFB0
 1222 0084 50000000 		.4byte	.LFE0-.LFB0
 1223 0088 00000000 		.4byte	.LFB2
 1224 008c 1C000000 		.4byte	.LFE2-.LFB2
 1225 0090 00000000 		.4byte	0
 1226 0094 00000000 		.4byte	0
 1227              		.section	.debug_ranges,"",%progbits
 1228              	.Ldebug_ranges0:
 1229 0000 00000000 		.4byte	.LFB1
 1230 0004 10000000 		.4byte	.LFE1
 1231 0008 00000000 		.4byte	.LFB3
 1232 000c 10000000 		.4byte	.LFE3
 1233 0010 00000000 		.4byte	.LFB4
 1234 0014 0C000000 		.4byte	.LFE4
 1235 0018 00000000 		.4byte	.LFB5
 1236 001c 0C000000 		.4byte	.LFE5
 1237 0020 00000000 		.4byte	.LFB6
 1238 0024 0C000000 		.4byte	.LFE6
ARM GAS  C:\Users\sk3220\AppData\Local\Temp\ccvoK08Q.s 			page 33


 1239 0028 00000000 		.4byte	.LFB7
 1240 002c 0C000000 		.4byte	.LFE7
 1241 0030 00000000 		.4byte	.LFB8
 1242 0034 0C000000 		.4byte	.LFE8
 1243 0038 00000000 		.4byte	.LFB9
 1244 003c 14000000 		.4byte	.LFE9
 1245 0040 00000000 		.4byte	.LFB10
 1246 0044 0C000000 		.4byte	.LFE10
 1247 0048 00000000 		.4byte	.LFB11
 1248 004c 0C000000 		.4byte	.LFE11
 1249 0050 00000000 		.4byte	.LFB12
 1250 0054 0C000000 		.4byte	.LFE12
 1251 0058 00000000 		.4byte	.LFB13
 1252 005c 0C000000 		.4byte	.LFE13
 1253 0060 00000000 		.4byte	.LFB14
 1254 0064 0C000000 		.4byte	.LFE14
 1255 0068 00000000 		.4byte	.LFB15
 1256 006c 14000000 		.4byte	.LFE15
 1257 0070 00000000 		.4byte	.LFB0
 1258 0074 50000000 		.4byte	.LFE0
 1259 0078 00000000 		.4byte	.LFB2
 1260 007c 1C000000 		.4byte	.LFE2
 1261 0080 00000000 		.4byte	0
 1262 0084 00000000 		.4byte	0
 1263              		.section	.debug_line,"",%progbits
 1264              	.Ldebug_line0:
 1265 0000 87010000 		.section	.debug_str,"MS",%progbits,1
 1265      02005300 
 1265      00000201 
 1265      FB0E0D00 
 1265      01010101 
 1266              	.LASF15:
 1267 0000 72656731 		.ascii	"reg16\000"
 1267      3600
 1268              	.LASF40:
 1269 0006 436F756E 		.ascii	"Count_Lines_Start\000"
 1269      745F4C69 
 1269      6E65735F 
 1269      53746172 
 1269      7400
 1270              	.LASF44:
 1271 0018 47656E65 		.ascii	"Generated_Source\\PSoC5\\Count_Lines.c\000"
 1271      72617465 
 1271      645F536F 
 1271      75726365 
 1271      5C50536F 
 1272              	.LASF45:
 1273 003d 433A5C55 		.ascii	"C:\\Users\\sk3220\\OneDrive - Princeton University\\"
 1273      73657273 
 1273      5C736B33 
 1273      3232305C 
 1273      4F6E6544 
 1274 006d 446F6375 		.ascii	"Documents\\PSoC Creator\\Workspace404\\Design01.cyd"
 1274      6D656E74 
 1274      735C5053 
 1274      6F432043 
 1274      72656174 
ARM GAS  C:\Users\sk3220\AppData\Local\Temp\ccvoK08Q.s 			page 34


 1275 009d 736E00   		.ascii	"sn\000"
 1276              	.LASF31:
 1277 00a0 70657269 		.ascii	"period\000"
 1277      6F6400
 1278              	.LASF26:
 1279 00a7 436F756E 		.ascii	"Count_Lines_WriteCounter\000"
 1279      745F4C69 
 1279      6E65735F 
 1279      57726974 
 1279      65436F75 
 1280              	.LASF18:
 1281 00c0 436F756E 		.ascii	"Count_Lines_Enable\000"
 1281      745F4C69 
 1281      6E65735F 
 1281      456E6162 
 1281      6C6500
 1282              	.LASF28:
 1283 00d3 436F756E 		.ascii	"Count_Lines_ReadCounter\000"
 1283      745F4C69 
 1283      6E65735F 
 1283      52656164 
 1283      436F756E 
 1284              	.LASF22:
 1285 00eb 436F756E 		.ascii	"Count_Lines_SetInterruptMode\000"
 1285      745F4C69 
 1285      6E65735F 
 1285      53657449 
 1285      6E746572 
 1286              	.LASF39:
 1287 0108 436F756E 		.ascii	"Count_Lines_interruptState\000"
 1287      745F4C69 
 1287      6E65735F 
 1287      696E7465 
 1287      72727570 
 1288              	.LASF11:
 1289 0123 666C6F61 		.ascii	"float\000"
 1289      7400
 1290              	.LASF27:
 1291 0129 636F756E 		.ascii	"counter\000"
 1291      74657200 
 1292              	.LASF7:
 1293 0131 6C6F6E67 		.ascii	"long long unsigned int\000"
 1293      206C6F6E 
 1293      6720756E 
 1293      7369676E 
 1293      65642069 
 1294              	.LASF1:
 1295 0148 756E7369 		.ascii	"unsigned char\000"
 1295      676E6564 
 1295      20636861 
 1295      7200
 1296              	.LASF43:
 1297 0156 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1297      43313120 
 1297      352E342E 
 1297      31203230 
 1297      31363036 
ARM GAS  C:\Users\sk3220\AppData\Local\Temp\ccvoK08Q.s 			page 35


 1298 0189 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1298      20726576 
 1298      6973696F 
 1298      6E203233 
 1298      37373135 
 1299 01bc 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1299      66756E63 
 1299      74696F6E 
 1299      2D736563 
 1299      74696F6E 
 1300              	.LASF14:
 1301 01e4 72656738 		.ascii	"reg8\000"
 1301      00
 1302              	.LASF5:
 1303 01e9 6C6F6E67 		.ascii	"long unsigned int\000"
 1303      20756E73 
 1303      69676E65 
 1303      6420696E 
 1303      7400
 1304              	.LASF9:
 1305 01fb 75696E74 		.ascii	"uint8\000"
 1305      3800
 1306              	.LASF25:
 1307 0201 636F6E74 		.ascii	"control\000"
 1307      726F6C00 
 1308              	.LASF24:
 1309 0209 696E7465 		.ascii	"interruptsMask\000"
 1309      72727570 
 1309      74734D61 
 1309      736B00
 1310              	.LASF46:
 1311 0218 436F756E 		.ascii	"Count_Lines_initVar\000"
 1311      745F4C69 
 1311      6E65735F 
 1311      696E6974 
 1311      56617200 
 1312              	.LASF23:
 1313 022c 436F756E 		.ascii	"Count_Lines_WriteControlRegister\000"
 1313      745F4C69 
 1313      6E65735F 
 1313      57726974 
 1313      65436F6E 
 1314              	.LASF20:
 1315 024d 436F756E 		.ascii	"Count_Lines_ReadStatusRegister\000"
 1315      745F4C69 
 1315      6E65735F 
 1315      52656164 
 1315      53746174 
 1316              	.LASF21:
 1317 026c 436F756E 		.ascii	"Count_Lines_ReadControlRegister\000"
 1317      745F4C69 
 1317      6E65735F 
 1317      52656164 
 1317      436F6E74 
 1318              	.LASF12:
 1319 028c 646F7562 		.ascii	"double\000"
 1319      6C6500
ARM GAS  C:\Users\sk3220\AppData\Local\Temp\ccvoK08Q.s 			page 36


 1320              	.LASF30:
 1321 0293 436F756E 		.ascii	"Count_Lines_WritePeriod\000"
 1321      745F4C69 
 1321      6E65735F 
 1321      57726974 
 1321      65506572 
 1322              	.LASF10:
 1323 02ab 75696E74 		.ascii	"uint16\000"
 1323      313600
 1324              	.LASF32:
 1325 02b2 436F756E 		.ascii	"Count_Lines_ReadPeriod\000"
 1325      745F4C69 
 1325      6E65735F 
 1325      52656164 
 1325      50657269 
 1326              	.LASF41:
 1327 02c9 4379456E 		.ascii	"CyEnterCriticalSection\000"
 1327      74657243 
 1327      72697469 
 1327      63616C53 
 1327      65637469 
 1328              	.LASF8:
 1329 02e0 756E7369 		.ascii	"unsigned int\000"
 1329      676E6564 
 1329      20696E74 
 1329      00
 1330              	.LASF42:
 1331 02ed 43794578 		.ascii	"CyExitCriticalSection\000"
 1331      69744372 
 1331      69746963 
 1331      616C5365 
 1331      6374696F 
 1332              	.LASF36:
 1333 0303 436F756E 		.ascii	"Count_Lines_ClearFIFO\000"
 1333      745F4C69 
 1333      6E65735F 
 1333      436C6561 
 1333      72464946 
 1334              	.LASF38:
 1335 0319 6374726C 		.ascii	"ctrl\000"
 1335      00
 1336              	.LASF17:
 1337 031e 73697A65 		.ascii	"sizetype\000"
 1337      74797065 
 1337      00
 1338              	.LASF19:
 1339 0327 436F756E 		.ascii	"Count_Lines_Stop\000"
 1339      745F4C69 
 1339      6E65735F 
 1339      53746F70 
 1339      00
 1340              	.LASF6:
 1341 0338 6C6F6E67 		.ascii	"long long int\000"
 1341      206C6F6E 
 1341      6720696E 
 1341      7400
 1342              	.LASF13:
ARM GAS  C:\Users\sk3220\AppData\Local\Temp\ccvoK08Q.s 			page 37


 1343 0346 63686172 		.ascii	"char\000"
 1343      00
 1344              	.LASF2:
 1345 034b 73686F72 		.ascii	"short int\000"
 1345      7420696E 
 1345      7400
 1346              	.LASF35:
 1347 0355 436F756E 		.ascii	"Count_Lines_ReadCompare\000"
 1347      745F4C69 
 1347      6E65735F 
 1347      52656164 
 1347      436F6D70 
 1348              	.LASF37:
 1349 036d 436F756E 		.ascii	"Count_Lines_Init\000"
 1349      745F4C69 
 1349      6E65735F 
 1349      496E6974 
 1349      00
 1350              	.LASF4:
 1351 037e 6C6F6E67 		.ascii	"long int\000"
 1351      20696E74 
 1351      00
 1352              	.LASF29:
 1353 0387 436F756E 		.ascii	"Count_Lines_ReadCapture\000"
 1353      745F4C69 
 1353      6E65735F 
 1353      52656164 
 1353      43617074 
 1354              	.LASF16:
 1355 039f 6C6F6E67 		.ascii	"long double\000"
 1355      20646F75 
 1355      626C6500 
 1356              	.LASF0:
 1357 03ab 7369676E 		.ascii	"signed char\000"
 1357      65642063 
 1357      68617200 
 1358              	.LASF34:
 1359 03b7 636F6D70 		.ascii	"compare\000"
 1359      61726500 
 1360              	.LASF3:
 1361 03bf 73686F72 		.ascii	"short unsigned int\000"
 1361      7420756E 
 1361      7369676E 
 1361      65642069 
 1361      6E7400
 1362              	.LASF33:
 1363 03d2 436F756E 		.ascii	"Count_Lines_WriteCompare\000"
 1363      745F4C69 
 1363      6E65735F 
 1363      57726974 
 1363      65436F6D 
 1364              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
